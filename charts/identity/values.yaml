# Set the global container repo.
repository: ghcr.io

# Set the global container repo organization.
organization: unikorn-cloud

# Set the global container tag.
# Defaults to the chart revision, which should be in lock-step with the
# actual release.
tag: ~

# Set the image pull secret on the service accounts of all the controllers.
# This is an alternative to dockerConfigs, but unlikely to play ball with
# ArgoCD as it's a foreign object that needs pruning.
imagePullSecret: ~

# Allows override of the global default image.
image: ~

# Sets the DNS hosts, X.509 certificate subject alternative names and
# oauth2 issuer etc.
host: identity.acme.org

# Branding options allow you to "white-box" and apply your own spin on the
# login and error pages.
# branding:
#   loginRedirectURL: https://my-host/login
#   errorRedirectURL: https://my-host/error

# A static list of registered client applications.
# clients:
# - # Must be a valid Kubernetes resource name.
#   name: foo
#   # A unique client identifier.
#   id: f15d7ab0-7cf2-4389-b662-493c39d78d3a
#   # A redirect URI to return control back to the client.
#   redirectURI: http://app.acme.org

# A static list of registered oauth2 providers.
# providers:
# - # Must be a valid Kubernetes resource name.
#   name: google-identity
#   # Must be one of "google"
#   type: google
#   # A human readable name, most often used for UIs.
#   displayName: Google Identity
#   # The issuer is usually provided by the oidc provider and will have
#   # a discovery endpoint attached to it at /.well-known/openid-configuration.
#   issuer: https://accounts.google.com
#   # The client ID assigned by the identity provider.
#   clientID: foo.apps.googleusercontent.com
#   # The client secret assigned by the identity provider.
#   clientSecret:  GOCSPX-akjfdns3238r328r9832rewjbds

# A static list of oauth2 domain mappings.
# organizations:
# - # Must be a member of the the domain.
#   owner: dave@acme.com
#   # Must be a valid Kubernetes resource name.
#   name: gmail
#   # An email domain e.g. user@domain.
#   domain: gmail.com
#   # A provider to use for the email domain.
#   provider: google-identity
#   # A specification for the provider type.
#   providerOptions:
#     google:
#       # Defines the customer ID that can be queried to determine group
#       # membership of a user.
#       customerId: d83dx45dx
#   # A set of group mappings from the identity provider to those encoded
#   # in issued access tokens.
#   groups:
#   - # A unique and immutable ID.
#     id: 5f7033e8-17fc-41a1-a8f6-f3085115b611
#     # The name to be displayed by UIs.
#     name: My Group
#     # The unique name the provider refers to the group.
#     providerName: groups/38ru24810eck10
#     # Explicit list of users
#     users:
#     - foo@gmail.com
#     # Roles for the group e.g. superAdmin, admin, user, reader.
#     roles:
#     - user

ingress:
  # Sets the ingress class to use.
  class: ~

  # Cert Manager certificate issuer to use.  If not specified it will generate a
  # self signed one.
  issuer: ~

  # clusterIssuer to use.
  clusterIssuer: ~

  # If true, will add the external DNS hostname annotation.
  externalDns: false

# Allows CORS to be configured/secured
# cors:
#   # Broswers must send requests from these origin servers, defaults to * if not set.
#   allowOrigin: ['*']
#   # How long to cache the CORS preflight for, mostly useless as browsers override this.
#   maxAge: 86400
