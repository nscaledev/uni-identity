// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
