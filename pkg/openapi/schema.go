// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
