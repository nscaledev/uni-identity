// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//BtMbwGocAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
