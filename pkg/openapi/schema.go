// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"qHuY07uLufonlPH37/8/AAD//7jXbxMJUAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
