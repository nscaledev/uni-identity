// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9aXPiuLvvV3FxT9WcUwVpswb6zbmEBAIJEPaQf/pSsi1AYEuOZbN19Xe/JckGG8ya",
	"TE/3dF7NdJC1PHp2Pfrpe0QlhkkwxDaNfP0eMYEFDGhDi/8L6DpRgY0ILt8+eb+wHzRIVQuZ7JfI10he",
	"siAljqVCafOFVL69ikQjiDUwgT2ORCMYGDDyNdBrJBqx4JuDLKhFvtqWA6MRqo6hAdgo9tJk7altITyK",
	"/PgRjYws4phIOzgXB6M3B0q86f5JuD2dOT4Bjj1OPFlkpkHrME2wJBpLpkVmSIPW/rl4Lc4mB7FGAKPV",
	"CTuEJX/b/VMJ9njmdEyLTKBqH+EVt9VBcohuzhyeQmuGVJhXVeLgY7NwG0tAtN4/m+1ez5yUQ48xisSa",
	"7B9fdHDWqD9EY0jtG6IhuCXKTfET+6NKsA0x/19gmjoSDb5MKJvZ9whcAMPUIftfA9pAAzYfzpsY1uAQ",
	"YahFGO1NqAaHoZGv/+HaxUC2zWYdj0amCGuRrxFVdyhXMWyejL7sZ/lHNNA8uW7OW2y1jss/vkUjiP0M",
	"UvB6qGlqLJWNJ2IpZQhiuZSSiiWUePw6BdRrKMPIurOpo0ALQxtSdxaCdda0/C8LDiNfI//ny0YvfhG/",
	"0i+bxfUsZENB6eBuFiwIbEglEKYSr3Z28Uc0wpQEsVyRO743i9h8Po8NiWXEHEuHWCUa6yywWaqOILYH",
	"nDpqWkmpWSUbG4JrJZbKaakYyEE1BgCAw8wwnY7LacZsBKtsU5Vmq2FVrWYzz+eqIQuq9sCxUORrZGzb",
	"Jv365Yvo/opYoyuVGF9UoOsKUKdif0yCKRy4HMkmF2HUJfyfxIQYCXY5jd4hpKmbgrlCaF8v3xYk9g3E",
	"tksuyZWDUMqrfK9KzBCcLhOnzZxbl71MckO0peRNR7KJJGYiAWG0Dkz2SajGjxJhYxlzla1fhvkkyrdM",
	"gCOapsFMDg5jipJOMAlLx3IwB2MAatl0Rs3I6eth5NvpIuQOt5c07gK9fZM2/kgoVXQyQh8kNNAASI98",
	"jUwIvFJ0MhrR/wtUAzIWZyxsA5tRDC4rY6WkojqqlDurcryGyrSMm2m1UM6Up+Zzt1DJXcFlZaX1yqiO",
	"yovqpCrX2v1k/XY6L6M5Uoyi/dLijWeglBo1Szmd/R30inJ5Qha19l2iOqmmq7fl5bBx1RrqD4t5s9Kq",
	"woeHYqLRTg3nZhVWhsnMU32aWVa6A6A1KJ2n1dPlyk+1A/JUxoxiQo4wVCGlwFoydmWqTZ8xfh1CDVrA",
	"hprUatXXnk7oVm1cJ9bkowUu2Pv5krfjrYWu4c0hNqAXSZ/4lNvEXSv45gBsI3sZ+ZpgVnDH7m1+Z3bv",
	"5H0WY+4lRl7XyZxK9hhKFNo2wiOJDCXxUejyg66QMHXvVkXHHLMhsSSNsMlR2xkOrzaekbGMuY1jbuN9",
	"WkwGQAFZWYtlruEwlrrO5WJKRsvF0rlh8homVJgA2jlaLEiIC/T81iJDqW2TKfwbHAKYzmqpnAxjmcQw",
	"G0vlQDKmXGtyTMkpUMnE0xpQlEhUmO6Avis25Gb5sdNtM3XVTzbT5QlBLV3rsH+/9NIT9u9GuxyvTbXb",
	"dqtMy0Z3DpblDFxWLO1+KvpYsr/XlhoqZ8p63q61ywv2PeT6s4hUOT3uxG+W/WQ/3exWaM8oWvX77q2a",
	"6MrtRDEB2pWU0orb4Ln41Jt0Zw2jWGsmTFuV0wUFySlwl001OrlbpdRM1LvVpHarL7X2zZ1yOwbKqnin",
	"tseL+l013euYcq9UGQK5jx4LFb6WRq+T7Lbit+rUpv1ks1J/7q+qcpO2e0Xakl9uXqa5vlqIN2A3t3qR",
	"++n2RANATtca0+Ztc9p9UOSi1VzGi208bqurcqJ6lzagMUq1cAW38E1T6RSLvfvx7EU2Se/eTPR7L9VG",
	"q5J7LFQs0Gtwc/FyP06qidxDR3+5axiLdt9YzFpGjq2j0p5W5lqp0lYS8eeOfvOiTtOPsFcrNrq5JqOh",
	"dq/P13uC5asrx2oayuI+MVBw9rGqg6v+XAbJN2rfV/MPeAHm03If2/fqrF6YgMVkNevGK7rRr8YShbZS",
	"iKNE187TWvmB1PViJZ25T9TkrFnt5+rmS0J1poX7p/hNY0EfqlRNxbtzvfzSn02K1qpXvoO3pJhLFA2z",
	"0Cz1VrYzV8c3Pe366a7RN4ewUqwkbuAIqKUxbLwNm8/PyXSzdruMvdTVlNabOrOi1c2WW04+G7seqPD6",
	"HiTSLavptJrAag+rg5vHfNy5zQ+ecvneZEyXpYf6Q6I4dcBtR342nvXH3u0qoz1oD8tcs2I3B7jTUak+",
	"sUHZqDxParWnvFF5i8u4kpbjdw+Dcqaau0m2mx3rDej1GyM1pdexmVEcjNS7OAX1WSKvorvcU+KmOlUz",
	"yfQU3CYL6Xt92Wvn0q2plikMinPTnDQ6s36nLy+v794SNRN3h9PnlNN6MrLDzm1KsVqTUg/fV2t32VWq",
	"mhg86dXUQ+slj+Bj06jmJ/30opd97g+cwrOVxkos2zLyg6eYPil0609P+efb57sFSCxaCyVfmVn9tx50",
	"SonyLD8tyEDJmGSiv3WMabM3qz+nbfzcALP0rJ54q+dHhX5n3Cr3nldyrJ8dq6tmpzW6bS8bRjq37Fwv",
	"3rpvBbScF8ajZ72eTDzMx2NsDR8XNd2q3qTSz3V9Na48xdXkbWF0/dK7VuqDxnVezpYmM+t50TauR51b",
	"KzahWi83brdQrdJwBoNVq1p86nZr7Te8ildvi2XoUJQpVVCuW5DzA+I8U22s1h5wZgLLt92chquLgjpR",
	"Gu30Gy3cvZFYRy2UZvfyYJ4ChbGpa9VR9r70BDutlzG4aT3Gl5gOynIhl8/fFmFOM55rmXnh/sbJVgrL",
	"WDtVJPC5qXdbD12nlChVUJYOV/licZxBD+PG8+LeSD/U8gNErJtK967eek5qj5mHeud5qNGbYXs1SoIq",
	"uVuaCaWSqwGg2iWjuKy8VHMwU120sp3FqJZ5uIfXJc1R5VqpuLyxnGRBr74lblbquL5QVreNAUHpPmk5",
	"i0dzVNKTC1QZ1nBBfyu2356rleu005rKg/r0YTQz7iHINUpNAOgi/Zx/bJnAHKjTwsus1p+UBuRlnJJT",
	"sYf2xAQJVBnd1dQV7LQTxdTkLZ2zCoV8p/jSHS6d5Jt9k4cVA6a6ozFW2jNQblcUswhvOsvWqP+gOqXG",
	"lTNrVCdI76BsRdWWJZh8VIA9cpX+YAYtNETQinyNvPQacrVUmbyU+staezx9ue0vq4nGvLZqLOvtvlwr",
	"VeWX3sukuuqkXyZNo3o7Xb1MutPabWVam3THtUl+8XLbX720u9P+qi9XjdrkpUEi0cjIAtj2wsRAnDdw",
	"g8Y9wadr1XjkKVy2TQB6sv32m9ZDAWWeu4S8tReRRCWVYOroNvebLKjDGcC25DYFWJN4GMq8EDR0bTTl",
	"TszQsewxtCQN2gDp4R6WY2q/SEgqZnIwJBVN6r6M4Yd79b6+z596MOd5YAmfUfUWVSi03uHdX+6Bb+Js",
	"oNpoxnNHjsIpyQLzMb7SCNyE5acTiK3oAjedfbaXQggPyce450BlwfWA65nI18iQkMhZK/PN5Fh6zGse",
	"sqofm/ydyBiretP993n775c6/hPWTIL4AdN/vgfOX1hsS0xorRPGbpqLTw5oEU9AI2wtOrRh5Nsm7asp",
	"CZiKp2JxwDgqnc3FlFwyGQOanIkntYR2nR1GNocSfOzQmSA8tAC1LUe1HQvum5Fv4GwmA4GcjiUy6XQs",
	"FVfUWDaeTMe0XE7JJKCWUmAmckaUDlQ9NDqXdERtFpEL9mB2x7YIMxw/ooF0/iV75FdbfIWI4Dbi9EjI",
	"iVRMTseS8XY89TUe/yrLLxF37RCm0sNkSonlMtl0LCVr2Vj2OpGKJZJqMp5IJ1SQyviOLtYnBFtHVawr",
	"LZWRZS0DYzCXScdSSioVA1k5G8umhkpiCJKZazkR2ZwpnZHp5ykcighGeNSyge1Q74yN/fEfP6+AspIB",
	"aS0Rg8OcEksNM/FYVsumYnIyqWTjQEsOr5MffV7RZNIUxmQ4cDwRYCx6CWf955O1fmvW+nY+b9Ej2mvT",
	"UDBY8FAnlMVsuLC/jG1Dj3z9Hto3GSHMnGpDpKOFV+MmoxHBEuM/aWgRg3vpwox75QM/VWGCeCoxzKTi",
	"seuhlomlgJKLgex1OpZMpdRrqABNTSd9lRExGwLjfSx9Mn9aRIeeP3pK7992T9j5x0CGOTWXBLEkSF3H",
	"UhDEYzkVDGOJxHX6OpXIgmxcZh+Lg+wzxjtd0bn7ukfHuaUgCHNmCMYEHlP8ZGX3yRbvYYtvZ/HFEf0k",
	"2vAIPZQ9mBq6syxiXairRhBDC6nSfbv6KEHWkWSCEeR9T+ZTepk6msKla1WsGQvwYulEnGt2xhVxbTGn",
	"pNLs3t7oLUUnFTK3c+XajWkrLWL0mk99q/awVO/ygwb7xl5GvkbuChG+F8zIoFEkGlmw2Zd6ecV5uMFY",
	"fnumkyzStN74ZZKOvbSrqWJKS1sV+KAoer3UVWNpXKl1mvRJuZ7GquO7NyvXyKP05AFr1/rUmN53EgYG",
	"+pw2nh4i0QgbM5+HZkHvtbJV8vhYWL1VGwlFTz7MV8Vr2Oo/jtWWRafZad9pglotlTZw12nQ+1SyUS8/",
	"3t2kn5/B/XjZajVH3QIwqvOXXmeet2bx6TneN6NtDyoPcNmCdjinVFr1mjSHijSFS4lC+0pqjxGVEOUH",
	"OZyJmKBqkukoOlJZMyrZY2BLwIKSBYfQgliFmqQseV+vmHXGoz3K+oK+DyUVYEnhJouHojwZt3R7czNR",
	"c0AlikZY9GiPEX3Frghyrto+af1lzd2IkJEOY0iD4nTz5yg4cRhWvmWCEo/LmVwymc1kUjGTqLKajWsj",
	"OnQ0S7YUx5zIDnasiTqz4wl4BUyTXok5M6XlEtMtEECUOjxn6iUq3aM974szExbbe7jXfd85tt5hgF/a",
	"tP2BLPDtMh44Ysa2+ED42qLgqkDwEI0c69x0wYmz3B0jNPtkQly+lVR/O6HlmOUFjk1iGqIqmUFrydaz",
	"TtXwnDp1TJNYNtReMdBHxEL22BC/DCGwHQu66w3kon9dN181YEwllnkm22rEALxC1M2A8g78a26L8xS3",
	"XdRfWPw1omSgmkjFtRhMKqlYCgzVGLgGIJaW5aGqZNKyloXnaKgArffrp21/yv+HX9vr/pV36dsl23RM",
	"hfibXklSlVCbx85UomPi6JpEsM48ICgRDKNMKKElAc1AmDK/hXkhvNw12JNEROBl6sBmIfuVLyv7Cwup",
	"7xTn5xgl/3EJHKblnKrFY+o1zMRSiWE2BgC8jgE5Hs+kNDUja+oFB0T7Q2S3gX9vfmnh/C1259uZ23NE",
	"Pr1WfJO8UsRL5MdXixhMSmpwCBzdjnxNh9QKSm6WULKXJqQSvBpdSQ/rFGJUYutybBiVoK1eRaIRDVFT",
	"B8ua2LDCJtE5tCDckwP1FUIGEqI8NGVzPLv6cR/LNxxoISiqH0VL4YgELRbQJQcjIRYW0eHPk4mtA1xX",
	"dwpti6htAZuI09sLhMfTxDGhu0+ShNOZmdMpnJPdaJm3kObIHu/LyYVXmv6yB10hlag/XysNE7Isy6nr",
	"WDw3zMZSiQyM5ZJKLpYbyiCtDIEMNS3Cxcft1Dt4brvnzr9ybXs0AhcmspZi29IxORmLp9rxzNe4zLft",
	"0tpdwVr7uDVYieyxTwiHfvLmh/Pm37Pf+z2grd2mIbv8S5+I/lv3+dtlG33ElwrfbTTCjvmeZL+GgE5G",
	"kk0kuDB1gLAEJNGrSP2LYZbUhkb9M0n3xyXpxM57STotPGnnFqdeYlC2Csk+L298Xt74vLzxeXnj8/LG",
	"n3B5gztSkA4QjnxNZmSZmfpQU9BZdRZVJGK5sVbMkf5zjTDdo5Uq9zW9eA+n6d7LXXqoTl4yfflu1dSL",
	"y8ZK12tG90npmE+1pG61JkXaLt4sap2K3OT2ohh/KZQzvWU53W+ri3qvs3hpxcf99ij+2G6Oq5M7u98u",
	"L6steVWdNPXaapR86b1Ma6sRem4xGxQfg96cTfBNSYydR6M5e+nc6EqvaCqF9ERJyEzX6/A+j+qTu0S9",
	"fRevraqp2uqOlg19rBXKmWq7n662G6naqpGstuYIPNdWbF3gvimr99XM4zJnab2KrhppXSt1V49Gd9VP",
	"jHXVqFEl2Z0+GrWZwtaCb8x+shlXjQ6bD9Hum3N1RWaPSS2pLdNYNYqJ/nNzrCI+r1n/+WWslYrLx9XY",
	"qBmddG1STtZK1WW/VzFqk7tkv11N1281vbZq6vVeJ1lrazwuVpNdxOdn5IiC0lMl0c27dHD6iZzN7EC+",
	"v2iR/HzqPAxvTDNN4tQ08su31Xjaal5nxsqkGK8XHmAKPbYyN4Wn3LL10ofd2PSmoMl2UtUy3YVSTxe7",
	"jcpT085O5bds1lIT8Uq+vexmpy21hq1YfFI08hXnuZ4ZATkRf2g3G7iUyd5mVy+13OPcqLaa4+T9U9Gu",
	"v6UeC6rRuGslgAYrS0pKuVzWMGynPTdTw7w1B7w0cWhBOv6n3JC2en8jN+/k5Eui2VXvKt1agiSaySZu",
	"T9PL5l18WjVy5ss9idd6tVUVxS31zmwCedFudio3rfZLW9Mb6ZbezMBb7bkqT5edTu5Om6ZvlftiVSuN",
	"67V7Ldm6G4PObfeuGy/eAUPeuCGdnNWQ01N12u014xXUXRXT9aL20JyM553kTRUYtbf+pJKq9e5W/c64",
	"Ub/TU8+rl5vnZG3VScTl+l131debVeW22FYnzX5LZu1Sy27CxKDbTzRLZrdV0ip9OU56uJLuLONOreB3",
	"QyqrZryfAnJ52Z82h91VPvXSrZTVSeW5mWg+VUvjRddIP3c6dhHcNdvdXi6uPfeTzbu05XdDtF7aBInc",
	"UkHxiVLKxV8K6ZlqqDMVNyyANZm7KPXydfY5q8rjZUu1BrfXV5nSyH5MtdSKldVTZEGuOzMwjT08k5pt",
	"d24bC+MFl6dq5TbbMMEAVurzTGvSu08WWrmJPn1pFkZJ7boTv7ZjikxnsXi85xg9vTO7bhbpdUq5A1Mr",
	"14GJWKurjZxbkH+8v9Nyo8Ls8emtm7kxGo/JlkWKvVHXua5CJHdkRCyYuYvBh9hAsa+NUkeWa8+l9mz0",
	"VJ32Sy/TufWchWoluwSTx1jcjsVq8eWo3Swl4W0nhae1u8pdMRW3325y40Kf0kG+YxRwmcrNIjC7Tux6",
	"/DCaZNorrY4z+fnTxHLAcj7Ty4vVpGhWyz2gjEgn/7R6A4NW3dJLMXDdysWrTnK8al4rab34lGhnS80U",
	"aZIx7dSs5oudK49enHylpHar1ylDtlPJl1ml9XDbTMvQuI6tKlY6nXrTdPCcfXMSY3th9zs3+m3sabWY",
	"p+jcMeaxZDJdrawAfX4qFe6s9u0wBVet55uCUqbp8n1KVZqDp5V986ZMu+2XRP/JWV6r9Wb5oYFWWV2v",
	"vhTmyKIJoF3f388c/bE4qurpViejzzKrMYo1+m1F1tozNXurPtyPS/pkeduwC/3l4q4YKzmdZPcZ3d5n",
	"cem+ohuJbro5AU2jbTamkzweJG5yHT17k53PW/FmvV7Q2l1TVbUWiBflFFqV07DfrsfLKbqwgTLPWbE7",
	"OZFdZrRu3TZaT6Y6BJNs9u4mN+hrT0mY7VkjrbOSB5WnO6Ite52mgdNlTAqlDKn3Zw4ZdlHruZJ6rtuT",
	"6t31bDzCqWVjWNeh0sZKV+9mVv1MV1cSN0/4uvvcbRfys1XZNoYzvV9MqqNUzJnG49PYY7vVasiGpuuZ",
	"zAjPW/dvk1qjbEzxdG52C23DcEyoT0qy0uh17HglQVP12gw/4qdi1tIxtuq9m8JsjqvJpFZPjJe5uS1D",
	"zXyIlatJvdR6Qkn0HE/dtVPELGL0ojy+KG1kFuZPL6tZC5bGehU+P7dXo/SbU2vUHHNul7XiqG9UgIqT",
	"chw2SfOq3jLf8tdlzZnmr2P3j3Y1VWh2GhE3mPTuWd5AYEHrzGuSoRFtEGSHF6Q5PPYcOjovy7Cg7ViY",
	"SgBLbsE3FW15n6Lqzbtt9IoNsJSIKQ5c9KWEsKo7Gr/Bxy8teYkHt/4NDUU9HIcV4oO7FeBQ4wG0g9GU",
	"WDim6sTRBiqx4MAACA/M6WhATIiBiQYqMQyCByxgNm2o+cPt4FLFREWB+RhQSYEQS95nfKlzpOuSAqWh",
	"ow+RrrO/0iVWxxbBxKH68uoV94kjsTWaRNfde6MeOBTWJINgZBNLQjaVRF6MH0WxDdHhOuF8xqoUoLnX",
	"wS5LI/BUFb8ZNQM60gbu+pmPyX4ZBCnkUUchGts6/skZ99dOX5aYVgg7Nv0zGALE9kD0L/HZ8IVGJbfC",
	"15uvRiCVMLH5xSqA8CtjvnULfhdwiKCu0XPJrxI81JH6TuJ7veyhug9gbI7ssUBxAQbkpagS0C0ItKUE",
	"F4ja9GfvhjsvbwXiqE8CmNhjaEUlhzpczO0xopIBAeansEtpDGYwuI5zKT8kloI07dL0mUf6dTd7aM8B",
	"+1QLcrUEdCpphDPSegFrBjItNEM6HEH6z0gEU44axEiUCgc0cdSlP1gy5aUCXovH64lhsOErFmrXXSHC",
	"o+AahRp2D8/zT+W1oHEyMSnDf21o84o3UFIb6qxrhDyszECx0BkUQdiGFgZ6i1+UOpTKP5EXxI0rl9Lh",
	"7OBqHJu49knVATJ+7n7nseRguDChyqySuGVAVNWxLKgFNxoEWtoWwBRBbLvfAKwJa8zNOdTYvjBNY1vL",
	"K6k8FD0hvqFsu1RAYVQydQgoYwiTWLaEbAlwu88z7efuHyZ2kThYe9+mYWIPhqybPTvmMwNQ2yjStUXg",
	"avPn7mAHA0WHjImGCGs+/MhzKehg74YdfCcV3dMEoT/2maGgJyhE4SfzftgUPB3k3p0Wgsn8N5Elcx1F",
	"+pOvR/wjd1wvOsj9e/Aa/Oe+OqB2XmUfeUe/8Vg80Y7LX1O5r/Hky5noDvsP9te3PzdQCRedrTma79TQ",
	"C0muAhx8RSw3Exv5Gk/G44lsPHctRyMI2N4fZPEHSk/tjDrKHlTKszEijoE8AoU49sZ0r+/P+oVoTck/",
	"4Xr47ys6387hjSOn1rzJlU8ePXiQMPjGcNAK4SSKGxsmtAxEqbgQzslsQst2YapHOlGAfgJkxt0aymPr",
	"TsEJ37bYZLRAD+sK3LO/fuSuwo+oh8JNFA/5xzfLcKDLMEL5qCN86o17wgbYpZjg+PC0hfshbxLdhgkP",
	"Ap0cXXZ909gDGBfgMf+JuP37uvt2mBz0bM7hla42NOgZrBHZbAqwLLB0J7FeSChM/tbo6zWxCUDsGCeB",
	"1ITQOkjB05e/Ieo5JNisMZwG2xKwM591EM/Jr62vYx2WXujv8BwBRtoRFi7fithDBJvcxkBmka52+XqL",
	"OfkbD5uJ7eHMMKE+sEnWieQ5db9CNNLOrgXBXEJ5d/P4hm+OIfvkt8Ef5J67ClQsxOMeNtOqN5bPXJ4G",
	"LNJirbe3cz11t7fQ/Qx2sV/3hmD0h1ArAORypPbd7TC//uTRjSRP43BgS2TO82GIbj0csKNRxO2Jg32y",
	"Jmf1ukVsPkRUiJCfCoeJLoDWfjUG9Ub7R/nxsOYPMuFpumML4ilEbzj2uArtMQlhlpZ3rXb72QSDf0AD",
	"Rk9gSFOoWtAemISfBwT/qACKVMZUOh24v7B+w+3hgbcdduYJkD1OfFm/77D+bqN3fe88bAmvag1mQHdg",
	"qJHzUkBu/CKpOqB0A9kgiS855rij60BhMYx4fWVnQT6M7TCZFD+7R1lDJHAFdzpx70ztdnFP5pJNJPd3",
	"HpUJECTTIoZpnzRDrxxoMN7jkZoWnCF+ZiWSdxpXSiLqO6F/PqG9nYvpsl/F1TEeYook/wl9G2AxAKMQ",
	"rVIFCwmMIJOfNVFO6tF98eR7GEoi/+2kXgT593Rzxt4E0W7DlfoIURtajFtdwFsJaJoFKQ1lpa23WI7a",
	"Ld6YX03+sX6x5XtIqm0jfLzRSatzQ93t7gpCJvivEtokIk7q00EDpvr0MMF+BHjkcK4w1+r0SIdbaj1I",
	"Pb90b+1VmL4XBwAHtC1vENCuwOFuKn+DxP2vB8SsuRmlaGQIDKQvB264NUIziL1/IGCL4vYIk0NGFi8Z",
	"Eo2YyEO2pI4SqoxVosHCGOg6xCN43Fiw5pLqtQ8zFq1EOsNG1gHCoSNy/Of2MozJNuPwRuuwd0OqELRo",
	"d398h3I7hWjh0/DyNt8PA0RJ5dugUQ7HGBOveO0Ms22TN3hle3uajznmNNB+inPkT6C834XnK7jYW9p8",
	"vY84uyRZg5YduSLEd8RzyUNgy875fA1cdvpHW9TwegibSnS9pr002udn+zlIpCr4cYjIUmi/tLP9AZxz",
	"XJZP9659uIK7QrxBDtsd0Q8ZdiW1IAyixVd6Dy1JI6pjQGy7x1bhCPF79E2g/0gIKXb+EMQ5O9ihD+OM",
	"42iyviT2D5FS55UEWIILcdIuJS1NMoFlL5khxxqwNPqKPVwBeCUVwvDyT1p8kE0F5N3303bOtzk7WxdG",
	"nrAnsXbdCu7CevVDPt9iKwsmXhILc+KYxP9FJd7C772d4mfywojwbuHC1FVkb8onPJt5qWfGOhVumWjK",
	"AZh0tFMhshWGHc8oiPHChDcE8SwsheA+tLBe6e9sJ4NLvljthXRzwnO0u/TaXLg8IYBVvaI6Dgk0JnMh",
	"xT5MIGZzAo/OkjnmJVHuZcdXzDNTS+JwnESA3c+GxLp6xZG9IXaLJxsOTlLkI37u5LyLpWHTElWsvEGU",
	"ySZSeQHcfAwtXvJhQkugezgixndh0CyoAxvNYHie2/vDOTwm4rvtDLmYeXTDAMe5LNx1Z2vl1oIMN0W7",
	"fobzfHhx1zYSjRhItQglQ5sHNPZ4T4AS9rzfydrhN/OB/hatcNAr2r2GfKJ/FIZSuesohSEE7iZMQvAB",
	"Q7J5gdgP7j1dZYzormqdIuQCjTCykXihN5DxZEOJ/EPka4TF9aHqh0XtgzUW4SGS0q1Y/1SKrmsHt4nI",
	"n2Zax9wDN+Y+bTLh8fpmjifvd1ieIDS89R53Opta/NMNGrOo2/K7Fyf67V52IWR26zQoRSOM8GgA9JGb",
	"Ij5xtuI7yYdEuVkAm7mXNT1dkNwu816PofM+ZGCE9JR5E+m/EaWidv1/Qu3GZD6l+xONoXIDFyahkHpI",
	"xR4JONQx3yy+UZtq+1PkKZBjO5tTvK9dODI+Sxc8eVPa6fHRfnf1pO3ZTo9ub42oUTh3BS6hzyxwEKnZ",
	"kEkIpr5EJ9I13DRcqGPAdIR7b8d3JMSVyHqr6SkbHJwRPws6T3HRI+dT79UTvrOxEIJ6ZXPHaIo0dUNR",
	"j5IjaPtT2m5tHcCBYrq/6PqJqcO03Oex7bGHO8wQthifHgjh4BBzd0BiT93rfbbhVK18gh0M9YW2sWpD",
	"4yN/OPBzw0rrPUGkPyS92Fnc7uQYgXbJ4sHehuYneL5DtPBO6rZ7WwvAmFB7X8WaiBsKDrWJIQBzt4fr",
	"sY2j0HavKnjHrQLoUXU/ZBbaUx2iS8kAGIx4kOCb1ivmWTDIa/NpsBY2yosZHcqCnahUEr24j0kA/jSA",
	"qMFgy7Uce/zKlIHUvMkXQm3yLkDw6dvumSU/kHDYNpRvPeJvEkWELSEqrl3x2iqe6LOhZXi5Poe6BPf8",
	"/KtXXB5KQ6CLD5F7YM6IIgFJcZDOVN96jCi/sGk5YhTMWwWZ6RV7z2VKBMNQ8nidtbyDySNwqr7G2/Kw",
	"Q7ljAhEe697yfykeWzj22G+eMFNLoawuSXltTNQti/aKvYtwwMNcBhZk9lh3KJpBfSkBTYOaNEOAp/uQ",
	"imw30W9AQ4EWHSNTkvJYkwyH2q+YcSaQ/mLqNIYw++4vN2V5JUm3QhR3rOrWFAywFCfqr5iNa48hsoLJ",
	"yygfzXtbRwVcHFw5200B0Cjv/RUbwKSivtxVCoIpdnMGkhSQwK0JuynYV0wddcykDhlBygDTRHgk/ARP",
	"9NbniGwbIlFPcX07IpT7kw67huN3yzh8tAk5nG0IwIyfnGrYgZvfddj8KNeh5S3iFdTfOWXslVleukv+",
	"7/eTKKQu33dQfvTEjLXbntz6hwOz2nugGdi530y4PmjHDorUBhn8RGkK4MGHClLQ2u4zfWNRlqYTMnXM",
	"gGcRFZsl7nNEJWGN1r6B9yiW1/oV85ow4UV9qXpJYbcTvwixrrb9B68KOzTTLC6UbN0RCVP2HAV8n+6g",
	"CDP/jrcJOTnZoKjv+l1AAgbHDyYuboWv6ngOlpTRw6F+twdhG44EUMcakT3Mn3N/FFWKnrOxnmJYZ74e",
	"dtc4g5ZCqDhNBHhdpjtnc173LOnIQDY9VL1Y23sjhWMTCOwO8aCEAr2SRjf/IFxqK7x/ARwf1vE+Cnv5",
	"DfZlOE32V1Hz4mlfmXLolDaA9WEbb4AFMhxj3/TCZ7SBvT97pe4db56D4AIFHJtQFehCR+6OJVD1L6Eo",
	"+zKsz/AK8jWZ3CHdvYz6JMe38CAnBfl2IxJhynItw8cucAjI/5P15UY3hGhL/uNe23VYc/xq7Hdk+/bS",
	"nC//7yC6+2r7HqrTffp6d8gg3b0nME7c9tDyLbePvTShe3niA2e3IfwZ09u9pnKMcyXFsSUbTBEeSQiz",
	"aM0FxdeWGBhI3bpW8rPM4zvF5+ep2nC5CtV+p23YB8taCEeEyFzgHORA4W7wbCZwi0SU64qKXB9CqUjs",
	"SoF/+H50gb/CWvv/igkOv31pER3uUxXst38wy7svJAhlAxJa7u67l8ganL7pHlX2HWkd2uPNsZW3t+Kc",
	"31fGblpkiPTwHQl9hiNkZRjOt8H6f8OwPbhaEQv6b/Sf8a345lgkue48jI1CnsQIvSP5SfW/j+r7b6YG",
	"H53xMuN7TOvfm5cJJcIpk+Ytwy7j+d4bCrsihkeSjmZQYz35gHv8h/veEbXmgxzbQigJUTfeKyOhx0X8",
	"8MNdgmtTqKQ50H3HA1kwcEClARvGbBR2QrVFXHfU46TdHz3seYNo/4XHXyj1FSZ/F2TAth92OVQwsPOs",
	"y6lVFSGvBIUYxe0ynUP2cadKyG8r71rpeCLcMG7uixxaKG918EoSloClINsC1tJtftLdJDtcOsVzNa54",
	"WJA6ur1Pvgd7uuDFEiZ4c+CJ8uqC2YdWmSIDssiAQpVgjfqKQDgcqw6ozWt1Q6OGDS5+WAlp+bYQuPca",
	"EjUE8M0PLNNteaAvPz5v6J3fbQwzxI9ZFSiZLGDAtgs86L/1LyALj9fi+8aOBrcuQP8wkXTfqDl8XYL4",
	"WcZfmxNWdh56cdq9IFq+vZKaHtzkGu30lQcBr5Gta4LHL2qzEOTI1VbW5qPH9O5zWnvXyYMar9VHDr8p",
	"ujnxuqUkVR1qc3OL+K2c9ciE/b8JKJ0TS3uNhB/Wuz8fgJUhcwwtyWsYvtbNKOeu9/BtapfaXiOp0yx/",
	"JLGPqId8UCus61ACn507pkOhFQ4EtUVxr+HHUnzHp1yzW5jyOBv0cWdRJff4SICWGpBSMILiBVpgI0V3",
	"MZGFAgq5oBXea16yoUWh26t78QkuTIA19n8uRO19u/3kNhFagoPMinINBVCBmcoauncRAg58lOfRRGUH",
	"69cjP5ufhaAtbDWHAGedi8KF/FOZShw7mTnCrHNCodevqNERY/kdjF3sbj8wqAvPsdH7a5BPB69L6Qbb",
	"l+C9PkVuILqNjWtDwyQWsJC+HDgYzAASPLP5cD2q9wfOKVuj+rgnGkBy9SFii7K/AfsV6DqZ70zdgBoC",
	"XicbPOcwhysE1nSbM7ruyZjLaZL4VfGgkN2n/Y5GA3sxhN8pJdP1K8yPQIF6F+hOaDDBac7fbOaNJZ21",
	"FqeH/mtJPKfJGC8AIBcosX7FCGtwATWv8of58Iz7ubAB24YWG/L//UeO5fKxFxBbffvv//26+VdscPXt",
	"uxzNxH/4WvzP//5XmDX5+PSBwHSqDzke5d9bwvl9S/Vsg1GGOo/+o+0NYEzQyVMgi5ZPg0DbGnSX276d",
	"R+bjWF9/B4VPzg1t09yd7j5ye8UlH0HpzVDvJvJO0L3ftHtBtCvgPC+i6zwxsl6FBYEm8DfnFrLDMLcO",
	"asAArJjvJ7cA1Pd4B3BGBttiTkR+4M8tnEEsKGCWFnao0+i5Lx/ELaE6kUUuYEQ/cBgbhEM78NVcuONP",
	"IcCzexh33c69rU2GAeTwjTvg4Ckmc7wFa+v/pzh3h1s/C5v17X1q2fpZKoIRAanN3XTV9x1eFy+rCODh",
	"vQmGgB4Qbyno0C04OyUdGA4i/OE2J4RhQhTTdpMQDRU9U8NwpXIuQP2eTfo7jfIBTnCrCW+W+wEbpPmY",
	"rKsO/SwRqseCmNans5Y7wOmstQ9pzsFI5J7WwJKh8zSIxsOHoyt3iyyPr9zr8cjKQXDdvhrOCzLs/Lwx",
	"QPIT2LotHp5xWRrRgLPr+rkTh7rvQIiLHhrBf9neoyevGOBlUP+yNmMIdHvsBnAi1GOu9hDZotYdeAgp",
	"LAR7xesZiHUHcAUuigNsMDqSB7bByH0gCGvC8T8VUDrv8ZXXRSgLzMJDD7b3gSJFG4yOO1PuJSDR57d3",
	"k+ZYSp15BiefF5y5K3tuF+47euWyx5SrJBb7G569siWcd+LKv/iAc9b1yPsI++FHqj4YnVMWKBAWPbD/",
	"UN0LLfoXZbE2wSwo5wK3eTgL4F0EoSOwO+5o3kyjh899NzM9gAwEBDURlVAAHX39noEJeeKM4w5S9o9A",
	"cVMwebn3bFnTkAgtxGgeJ+xum3gUgQ8dOml+JOQaIN6VC7oCNYkS9lfVvRvVFm8c8YeARg6wALYhP2V5",
	"xQr0XuXjF7JU1bEYJTToLlUi2OsWYPECGrUtgNyTyBPtW+h27D0h9h4jAzb8Imzpz1Qalx4Nb9TDNqfu",
	"OwVeP2KyS4PA+Ri2LcI64dmTcFZRkGWPtb3szQvQ/5J4K4kTVGycLeoSiMW32iZSuVXPZuQ45xkoLSGw",
	"JJNY4iqdKA+UZVkW71XCpaSOCaGQ85VNJAvOINDFL8DiATqTbaKf4QJegDQW3scGazSsQsJNPcNgb5vn",
	"ML2Pff0rhOgQ8CJCP2rpoalSx9rrV4yY9rAOfi6ahH+9QUo91MOQWHDvDFxQ1UPfN4uFdCaVkXQPfTbc",
	"y4lGDKRpOjw+IdGOK///pv9zMGuyf1GOru/31zBSp0e78BqFn/W54LI7HXSaj97JtNuP23TP/V44hJYF",
	"tcH+oyzvPFxoPC5M3mG4y5IBFgwE4bwO8ZQ5iqaSCUbhE+XPMYVWCwdxHVyLG9qHG/IMQLj5x2ETYqES",
	"N2G+eGmn4zlUaKiZ2F2o2zS0mxXBMFzV+riinK/lJUApGmFmHZEBV+GXt3ddkYP6/VhVgbB4rKX0VG+1",
	"DyG/Hy1GEQUKR4pRtuYf6HbfQg4WKa0vOJ0WadB9yFq8NEp1LGQvW6yxe8LAFxV8FC8UbsvaFJIhC1Lv",
	"vFLhj0S71jQEJEsn810oroJbUxH4Y8fST3rkzIUR+zJLfAl8v4YliXz97tWcXNCn94r1Zqv4T+LNq/1s",
	"3hFdSmXvTnr+qezdMKTrp6m5O4gAtiX+8ugQqAIkx6Fu3hvo+iv2+nKrzNx3sCyyQJBeSVKeSsj+i/Iu",
	"+Jkw+9pNSxiObqOYDTHgzxMQR3vFGjR1shRZdmQzz5W6b26C0ciCI7GxOlhCi/chzo43OK185t5coq9Y",
	"Q9QEtjpmbo3uxzilm9oit1iAf6oAdQqxUEHIZoo1EkYtFrtDiwqSylfxK9lDgwMminyNJK/kq6Q4Lxxz",
	"lvpyNYe6HuOZ6i+imjymHoaNKzNvXFCCT20NnsgmNwqDiWzygxDbQ2XcoC0yle8dAi1F5d7Wc9DrV4Si",
	"4qFUHzxRoMhv/WYTf26uBO0e1PUHtqp6CBTe5loFJ0JClvephHW7LyGQeuvn+H5wxv4CTPRlFv8S+kxb",
	"CdqcXfKFR6bCiYp4hm9dCcJBiVzwEx86lAdTyd/54HgKElcgBrFhkLdt4j1g9Yo7zwf2wn0lfusNtLUe",
	"X1fHeDBJO6TNm6gbz6v6RWQEqr4hWzSSkuPHv3nvU6w/opH0KXP7oEeP/VaCp9bD7cN/vv345mcb0co8",
	"gB6pM0PgwuYwAeRVqUtqQ8O7jr0DKynipDXIh8sxrxhRX/WB750L99nwXVgQnpde62KHSsBFfn3Fbltx",
	"jsvVLKEUKSxcd2FhRX53DiUswnq/kYMBZgvl2UfE9KK70l2Ek/1MWt8i6SUMK4atB6E9/wkWTsnJDx1n",
	"9+X230ROjqCehElJEABFkur+f/NcwLoUwQVbf8V+BC1XjgKgWj4tbRHHhiF2HLxiZrhjEG+QEiQf7IJE",
	"LGmNvOCOsW5ngCW/4jl/xQGL7KGqSkyRixY0COLKVjxEGMZGFuCQUkLZ8364tl8XzQnMHj9o3voFWkGQ",
	"AC5Q3vZKoF+xm9Fzb4hwyCVe7ciIjeEWfgRwIZJ43OiCJ0lk6CI+uyQ+arHC4WwEOdgWcjzpLx6qmIua",
	"ftiKBfjgMrfA38OnZdtIbDTCHyzbJ5/rWzW8fgLD+RZkl+cIcTzxdWGjACfxW4+OqLLocPAsZtUsccAW",
	"3O8nQvdtOJfWG6ItT3hU+bT3fXchrH4EI1o2xx87zJb4Wyaw75FuPyHWJ+3U4Ypi6Oj6UvDwx/KWAjQ3",
	"1/BpQH8RA/rle6BU8fbHp0X9aRZ1n8UrQXsbb+lEE1YP7OW7DdqnlP58owksYECbB4B7qrI2Tb4EZffJ",
	"+4EX4JjOfuu7jeYlUvq+PPeW+XRO47WALQ0nrtcEMQLz8eoBhhNXJ36Ec+4BE+Y3Xev6KeZ3Wtx9ZKv6",
	"ZOJfzNRcnimLegkPN1kaBiH8O2TRDgjUZ4LtF9OoZ7D1ocenqwE3yv8AtSRtoIA4AxkS1TlnrsGFOI9y",
	"7F4b6BKGM47juFChWyzqtnJvCAl06Q2OoO9BOfei9oF0G9D1LYSp81nYR4eLWHnz/b/WE0nJqQ8dBBO7",
	"SBz8KZt7ZHPvg5XHghzvIUupJADnXS/enyznINsmwiOv9lgEA75HHG1/Mt6PCE+wVwU9R7rOy94E+Lib",
	"LN/ckxdvgXivhfM+EfWMGNMh67LqVyxui/K4x6EwJDaxCcfv5utl2oIX1G0Q3OgZSTkXh3+djfNpmtDH",
	"B87WJoLuFykSMbfPaOZ3jmbOSyauHy0+JQ+4l8/OjGdEGq0kXrDdF8jET2TXf7HFy33oIN4d9X9XaCRU",
	"1pfv/L9I+7G+Qgf3SgG/FO7esuOSgMVtGqbU98jDLe/xNIkoiZlETgnNedtgTL6+x/fpwf2bPLhPL+od",
	"XpSXjfNwf0XXLtgU0fWwXNzJntJhef2TLdC/3l+KHv3UNStnZIwDzPmeTPEud16UNj7iZp1mlP6MRPGf",
	"bKFO97guq78LexRl+9n336oI7xX7xRXoIQV34oiUv9TO1AEH7VoSx5LIHAcqnfnJ7CuuT21wxWnQjfOa",
	"bvFIvCjl9Zm/jSn3TLg0BljTxezYLCz4it3DYh+93MdSdrfiWIozeAr2Fz2vuHC/ivuIukPyh1QcfiZA",
	"/84EiUB5P4XTL0uWhHH6meZ8+0X7dyROtrv6zKD8wRmULXv+5fvmrdaD2RSRE7lMZE7Lp2wJzdPmDdlT",
	"3NjyjlfwmWf5zLN8uqK/viv606L7jR3kauWEKL8jYCwu8xMc+30a729yGI6UjIXx0yax8ak9/8QcwP6X",
	"X323Xj30Up/29WrIrqQnt4eoBKikOpYFsc2tMs9ev2I3ff2wxsr0vo2Komn3NW2mlAIVbkGsg1e8fZy+",
	"N8zlhTzeuj7uNN5b50WxrTedzwzzvzTgpO4xvCcqa/hBf1nkX/QIG54SgAb48KLz+ifvYeZ9diRxMkMH",
	"+ezz7sxnXPs32ige0HLo61PiWeo9Fc7lMayu2u+Da2uEKG6EXj2uoL7T080dPSCpgKpAwLGtUU448DVz",
	"nDU3oNZ1cV9G3KBRdYf5zK4VtURpq/tHemlk7WmDJ48ykUuk+YztZ2bZtLdl5VPyP73TM2zyvktgTLJc",
	"iX2Xj3ZAGuRP2/bJ4f+iuoa1STw553FQyE5IbYQL2UUlDUc90ZCMhvtNaFnD1aesfsrqT/VDf6OrT/+4",
	"SjocPuODl6/OiYzXimn7OtaZOmozn3ed0fq7+fQoPqPlf1hLffm++ceRQHrtLxyWzQsjVZ905n0z2hPA",
	"7h4HqiH34D/Pgv+As+Bf/0Kxd6P/ndeJLxcZ+XKz9Ck0nyHo+/2941/5rdA5sesRP9H5WKn6G1xG+dNl",
	"/NQAv5TLKGxeaKpFVDsFy67WZ5s6MpBND1tB155+2DF8Q8z1EqkSU/k8gv+3QXy1zuazE6yEj8/OtAEe",
	"m71D/4dx6qfu/+PQwiyiw1OvZfG2onhTRCg7UF3QMhClXmT0ivkTIRv4Eh3h6br6ypBmCHhXII9iovjG",
	"duGROQ6ZW/n1bpXf5GS4RI74xD4Z/A9AOXJrCoGqEgfb9DhwCkfoDj4s4NZNe32cABcW9snZ7N3amvpF",
	"mP2ij7zbxyfL/8vLDLcYz3edW0TIvtrZ6EVnKWFMeaYfFORJMf93HaSEd/jJ6b+o97Klkr98D+7fkbOH",
	"JjTIjPN7OK/PyBTu8PqlZxNb3N7amuhJt9RaW9O0+AIE0oJ/ju7cP88o/oT7ame6Gz8tZbstimcVD23N",
	"/KLw+hSJ+1vtzdlO1ael+Y0tzReLhD81/nvLaain2ORLDRHUv+gRY3mBY7gtuGLwD4hhPt27f0LoopFF",
	"DJOYwpUuf7XndCnc9yZtWLZqCDXGeO61i1NC7XW7s+Nr/lLSRRzJx/xkwX95LM2fdeNeundHiLooABKF",
	"PqTny/TlhvvOrZCm0PqAoFk87fxZEfgHVwRyNfblO/vPiTfnwEYoNER9csGPBrw3pzcI6HDJjxB8Lx1e",
	"GolzcenQk7FhWNNgqL2Zl4bovneHP2PvPw0rJsTj+GlevJC8s2Ls8Fd0TgistwXob7A68h9udX4Di0DR",
	"CDtmiDNO+fP8Hlg6f4twDnWVGNB90Y8rfoIVAix+vRkuTGghiFUoEKMR1/evWEd4Kq3fxNV1XjJLLBeX",
	"egZ0pLnQRoj1B2M2MqCbAeXvTlkAU8Sm9Ypd2GsTYj6kTSSg2mgGJcqCyb3BQYEYJr9o7al1SSxbMi3C",
	"wtz90UJLkGeLs5OhleaSBTVkQdX2gEk65dOvmYkJbW8p3ymxkV9miS8BoO6DQCz1PAe3Ct5NH1ng0Gnl",
	"uogLBHhGGMtAR4BKJhTlM+5A1IQqGrpfeM+MMQZCqqMDi4O38KmJDtwHX5n+eo2oRIOvEclemlDyCCIe",
	"Rn56KNxdveI+cTjEuBhE1Aq8sg3DSHuNuKXXfqYagxkHbKqbEJdvpQLBGKob+K3lOr8uYI0lzeHoWGwi",
	"ElyoY4BHMJQnBFhTl0vVZiMuKtz09+DXGcd4SwHq1GMwT3g0Llj8l07z8XSmG9uGvsVyJyqtkC9/7H3X",
	"+JOxDjMWiw73c9a5hcVBxnpPbfG/kEWD+nQyn4bkoSqtek2aQ0WawiUP7CHWTILE+cXhJ5+wBCwLLJnV",
	"NB1FRyrrY/PY4gxajM0qvfbOKwuveP3MArSivDoRLgBj7g0UG7GkELARelBTVdgSL9l9Rpt/zpfZ2ij+",
	"2nEIzw1tuAFNksbIpmu8lg2VvO2LSkDSENDJiPkm7nP9fGNe8QjafvAl4e8ATbMgpdF1ZRyiG9H2M/nm",
	"fQ4vkT5DQHhBbh8BLeK9uRl44dkAtjpmygJg7RWzuHvEYQcd2/80Bx9OJRaXs1AAwnAV3IJYo+sV0r/W",
	"z4towbVur2j97sdBpfXIt+cCZcX3dZ+SOtHLci0E1EIwCztN5oJtcxMXm1Pcpx29fYJ92/Ad/5q7qL4z",
	"fa+3XVP3igO2bpOHeI0ENPHANWvcm7uSykPvFfC1vRGYRBtDK2xe0GZJWyaLwxEBnfI3LNbvPUgSs7hs",
	"CiagdE4szRtYWFXG4OwbFyXUfdPO9zw/leZjaDGuE/PielWxyJzJq3t1bssrGOpkLs2Jo2tsKsgwLebj",
	"q0APaMVXLJJLjk0MYV6IYbBl6ghDF2/VDVRsQnSER1FpTOZwxmkuwhNM7FdsQfYlxEwUAJWQzQIZQiE/",
	"6uM0AvpaLPJPZUFMTGyBj+rmf23LYRvwipOWxt2T5akw4p4MtTlTXiBDfP/eZejdHv6tNeT/qOVi6hbh",
	"IdnvNCBmW5joc+73P54EFOLYYZVLB52QC/rb6z10vNlfmtphH//8PT/vDCn8bPyjqOmX8QA5L8i3CWq+",
	"M9v2D22JkAukqV+8QOCgBeZ2sXxbWAduwpx63+6VgnYQQdartXMN+la0qBHIrYDvrbWlJLyLbRu643xf",
	"SVLZlhCmNgSa5Plr3FIAaW0FfKFhAGgc0bVbKnC6qf+rEEfiFdsB0+xZpJC1MvvkuRmuQcZb5j5c6JGm",
	"Fry9OdMX83vDnnn3ANJ3F3P1T6jlHz/+fwAAAP//ZkMaAF9eAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
