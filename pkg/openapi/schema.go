// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
