// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
