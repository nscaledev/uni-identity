// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"yfXlm1VTLy+fVrpeN7qPSsd6rKd1uzUpk3b5alHvVOUmsxfl5EupkustK9l+W100ep3FSys57rdHyYd2",
	"c1yb3Dj9dmVZa8mr2qSp11ej9EvvZVpfjdBzi9qg5Bj05nSCb0pq7D4YzdlL50pXemVLKWUnSkqmul6H",
	"d0XUmNykGu2bZH1Vy9RXN6Ri6GOtVMnV2v1srf2Uqa+e0rXWHIHn+oquC9w1ZfWulntYFmytV9VVI6tr",
	"t93Vg9Fd9VNjXTXqREl3pw9GfabQteArq59uJlWjQ+djanfNuboyZw9pLa0ts1g1yqn+c3OsIjavWf/5",
	"ZazdlpcPq7FRNzrZ+qSSrt/Wlv1e1ahPbtL9di3buNb0+qqpN3qddL2tsXOxmu4iNj+jYCooO1VS3aJH",
	"B7efKjjUDhT7i5ZZnE/d++GVZWXNJLGM4vJtNZ62mpe5sTIpJxule5hBD63cVemxsGy99GE3Mb0qabKT",
	"VrVcd6E0suXuU/Wx6eSn8ls+b6upZLXYXnbz05Zax3YiOSkbxar73MiNgJxK3rebT/g2l7/Or17qhYe5",
	"UWs1x+m7x7LTeMs8lFTj6aaVAhqsLol5WyjkDcNx23MrMyzac8BSE4c2JON/yg1pq3dXcvNGTr+kml31",
	"ptqtp8xUM93E7Wl22bxJTmtGwXq5M5P1Xn1VQ0lbvbGaQF60m53qVav90tb0p2xLb+bgtfZck6fLTqdw",
	"o02z18pduabdjhv1Oy3duhmDznX3ppss3wBDXrshnYL9JGen6rTbayarqLsqZxtl7b45Gc876asaMOpv",
	"/Uk1U+/drPqd8VPjRs88r16untP1VSeVlBs33VVfb9aU63JbnTT7LZm2yyy7KQuDbj/VvLW6rVut2peT",
	"Zg9Xs51l0q2Xwm5IddVM9jNAriz70+awuypmXrrVijqpPjdTzcfa7XjRNbLPnY5TBjfNdrdXSGrP/XTz",
	"JmuH3RCtl7VAqrBUUHKi3BaSL6XsTDXUmYqfbIA1mbkojcpl/jmvyuNlS7UH15cXuduR85BpqVU7r2fM",
	"hXnZmYFp4v7ZrDtO5/ppYbzgylStXuefLDCA1cY815r07tKlVmGiT1+apVFau+wkL52EIpNZIpnsuUZP",
	"78wum2VymVFuwNQudGAq0epqI/caFB/ubrTCqDR7eHzr5q6Mp4d0yzbLvVHXvaxBJHdkZNowd5OA94mB",
	"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",
	"dx/WfnsxF/+EWv7x4/8HAAD//5LQK2BVZwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
