// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"b9/+fwAAAP//mHLxQ3GFAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
