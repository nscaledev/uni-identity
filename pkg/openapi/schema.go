// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"0+r/hAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
