// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"fU3nZJmaeqEp6K67yzrix8KJVi6Yg5eGSXWPVqndN/TyPZxl+6932ZE6fc0N5Lt1Sy+vnte63jB6T0rX",
	"emqkdbs9LZNO+WbZ6NbkFrMX5eRrqZrrr6rZQUddNvvd5Ws7ORl0xsnHTmtSn945g051VW/L6/q0pTfW",
	"4/Rr/3XWWI/RS5vaoOQE9Bd0gu9KauI+Gq35a/dGV/plSyllp0pKprpeh/dF1JzepZqdu2RjXc801nek",
	"augTrVTN1TuDbL3znGmsn9P19gKBl8aargvct2T1vp57XBVsrV/TVSOra5Xe+tHorQepia4aDaKke7NH",
	"ozFX6FrwjTVIt5Kq0aXzMbX71kJdm/PHtJbWVlmsGuXU4KU1URGb13zw8jrRKuXV43piNIxutjGtphuV",
	"+mrQrxmN6V160Klnm7ea3li39Ga/m250NHbEVtM9xOZnFEwFZWdKqlf06OAOUgWH2oHiYNk2i4uZ+zC6",
	"saysmSSWUVy9ryezdus6N1Gm5WSz9AAz6LGduyk9FVbt1wHsJWY3JU120qqW6y2VZrbce649tZz8TH7P",
	"5201lawVO6teftZWG9hOJKdlo1hzX5q5MZBTyYdO6xlXcvnb/Pq1UXhcGPV2a5K+fyo7zffMY0k1nu/a",
	"KaDB2oqYlUIhbxiO21lYmVHRXgCW3zmyIZn8VW5IR72/kVt3cvo11eqpd7VeI2WmWukW7syyq9ZdclY3",
	"CtbrvZls9BvrOkra6p3VAvKy0+rWbtqd146mP2fbeisHb7WXujxbdbuFO22WvVXuy3WtMmk27rV0+24C",
	"ure9u16yfAcMeeOGdAv2s5ydqbNev5Wsod66nG2WtYfWdLLopm/qwGi8D6a1TKN/tx50J8/NOz3zsn69",
	"eUk31t1UUm7e9dYDvVVXbssdddoatGXaLrPqpSwMeoNUq2L12hWtNpCTZh/Xst1V0m2Uwm5Ibd1KDjJA",
	"rq4Gs9aoty5mXnu1qjqtvbRSrad6ZbLsGdmXbtcpg7tWp9cvJLWXQbp1l7XDbojWz1ogVVgpKDlVKoXk",
	"ayk7Vw11ruJnG2BNZi5Ks3qdf8mr8mTVVu3h7fVVrjJ2HjNttWbn9Yy5NK+7czBLPLyYDcfp3j4vjVdc",
	"nam12/yzBYaw1lzk2tP+fbrULkz12WurNE5r193ktZNQZDJPJJN91+jr3fl1q0yuM8odmNmFLkwl2j1t",
	"7N6C4uP9nVYYl+aPT++93I3x/Jhu22a5P+6513WI5K6MTBvm7hLwITFUnGuj0pXlxkulMx8/1WeDyuts",
	"Yb/koVrLr8D0MZF0EolGcjXutCppeNvN4FnjrnZXziSd95vCpDQgZFjsGiVcJXKrDKyem7iePIynuc5a",
	"a+JccfE0tV2wWsz16nI9LVv1ah8oY7NbfFq/g2G7aeuVBLhuF5J1Nz1Zt66VrF5+SnXylVbGbJkT0m3Y",
	"rVenUB2/usVaRe3VrzOG7GTSr/Na++G2lZWhcZ1Y1+xsNvOu6eAl/+6mJs7SGXRv9NvE03q5yJCFaywS",
	"6XS2XlsD8vJUKd3ZndtRBq7bLzclpUqy1fuMqrSGT2vn5l2Z9TqvqcGTu7pWm63qwzNa53W9/lpaIJuk",
	"gHZ9fz939cfyuK5n292cPs+tJyjxPOgostaZq/lb9eF+UtGnq9tnpzRYLe/KiYrbTfde0O19Hlfua7qR",
	"6mVbU9AyOtbzbFrEw9RNoavnb/KLRTvZajZLWqdnqarWBsmynEHrahYOOs1kNUOWDlAWBTtxJ6fyq5zW",
	"azpG+8lSR2Caz9/dFIYD7SkN8317rHXX8rD2dGdqq363ZeBsFZulSs5sDuauOeqh9kst89J0pvW76/lk",
	"jDOr51FTh0oHKz29l1sPcj1dSd084eveS69TKs7XVccYzfVBOa2OMwl3lkzOEo+ddvtZNjRdz+XGeNG+",
	"f582nqvGDM8WVq/UMQzXgvq0IivP/a6TrKVIptmY40f8VM7bOsZ2s39Tmi9wPZ3WmqnJqrBwZKhZD4lq",
	"Pa1X2k8ojV6SmbtOxrTKGL0qj69KB1mlxdPret6GlYlehy8vnfU4++42nhuutXCqWnk8MGpAxWk5CVtm",
	"66rZtt6L11XNnRWvE/ePTj1TanWfY95h0n/OegOBDe0zX6MKT7RRbCqWo+eys+fI1VneiQ0d18ZEAljy",
	"suYJb8v65ImA/iOvN2yAlWRa/LZHX0kIq7qrsYeS7G2YH3jwUgLRiKcIMjQuNriXRg81doB2MZqZNk6o",
	"uulqQ9W04dAACA+t2XhoWhADCw1V0zBMPKQHZsuBWvi4HV0qnyjP0p8AIikQYsn/jC11gXRdUqA0cvUR",
	"0nX6V7LC6sQ2sekSfXX1hgemK9E1Wqaue89zfUw1rEmGiZFj2hJyiMQDZuwejG6IDoPY9RmrUoAPQXNZ",
	"GIHFsNiDtDnQkTb01k99TPrLMEohnzqKqdGtY5+c8Uzw9GXxaQnYsRWewQgguge8f4nNhi00LnlJz/58",
	"NRMSCZsOe88GEH6jzBe0YE8uRwjqGjmX/KqJRzpSf5L4fi97qB7C5VsgZ8LBcoABWXauBHQbAm0lwSUi",
	"DvnVu+HNy18Bv06UADadCbTjkktcJubOBBHJgACzK+CVNAFzGF3HuZQfmbaCNO3S8JlP+qCbPbRnuEyq",
	"DZlaAjqRNJMxUrCAgIEsG82RDseQ/DUSQZWjBjHi2dMRTRz36A9WVHmpgCUbshRrGG34hrna9VaI8Di6",
	"Rq6GvZv74lM1EDRGJipl+I8Nbd7wBu9qQ50gpckHto3kNp1BEYQdaGOgt9lrs0Mx/hN5gT9b8ygtZgdP",
	"4zimZ59UHSDj1+53EUsuhksLqtQq8YcXpqq6tg216EaDSEvHBpggiB3vG4A1bo2ZOYca3ReqaRx7dSVV",
	"R7wnxDaUbpcKCIxLlg4BoQxhmbYjIUcCzO6zSPu5+4dNp2y6WPu5TcOmMxzRbvbsWMgMQG2jSAOLwNTm",
	"r93BLgaKDikTjRDWQrCr51LQxf4zRfiTVPRuE7j+2GeGop4gF4VfzPuiKfg6yHuyzgWT+m88SuY5iuTv",
	"8mLkL3lBfNHV75+DlxG+KdYBcYoq/ci/LE4mkqlOUv6aKXxNpl/PRNfYnyMQvK3dQFVcdOnmaqHrRP+s",
	"chVh7SvT9kK0sa/JdDKZyicL13I8hoDj/0HmfyDk1M6Iq+xBeT0bo+MYRCVQTNfZ2PTgdXJYugJK/qtf",
	"5f++MvXtHKY5cs/NmlyFBNXHcRHhaorRRbhbyR+xWNA2ECH8HT4jswVtx8ODH+umAvQTsE3uAsyVrdcU",
	"J3zbppPRIj0ECcNnf/3InIsfcR/u3lR8SKbQLMUIpCJChajDvfCNQ0MH2KUY53hxoMP7kDWJb+PxRxFp",
	"ji67uWnsI/lzrKL/xLz+Q919O0wOcjbnsCoEDjTIGawR22wKsG2w8iYRLERYBWNr9GBNdAIQu8ZJaEIC",
	"WkcpePryN0Q9hwSbNYppsC0BO/MJjv2M/FrwQu2w9MJwh+cIMNKOsHD1lp9W+PGUGR9ITdXVLl9vMScr",
	"4bKZ2B7OFAn1gU2yTyTPqfsl0Eg7uxYF1xHy7qa2TmiOgn0KG+cPcug9BcoX4nMPnWndHytkLk/Dc2nT",
	"1tvbGUzd6024n9Eu9uteQTEMAbUi+DlHMvK9DovBJ4/e2fM0DgeOZC5YBA2RrQodOxqFP/Y42Cdtclav",
	"W8RmQ8S5CIWpcJjoHAHv78ag/mh/KT8e1vxRJjxNd2xBbgn0hutM6tCZmAJmafsvjbfrkxjsAxIxehzc",
	"m0DVhs7QMtkNQvSPCiBIpUylk6H3C+1XbA8PFFHZmSdAziT1JSikEny30buhgipbwqvawznQXSg0cn7Q",
	"yDvYSKoOCNngXkj8SwYG7+o6UOjhhpc52llQCPxcJJP8Z+/ya4Q44ONOJ94Tr90u7s2F5JiS9zs7rnHs",
	"Kcs2Dcs5aYZ+AtFwsscjtWw4R+yWi4f7NKaU+HHwhP7ZhPZ2zqdLf+Uv3djZk18LnNC3AZZDMBZolTpY",
	"SmAMqfwERDmpR6+00HcRfCX77aReOPn3dHPG3kRhiMVKfYyIA23KrR4ScbgQmKDHSNGjo3aLNWZvr38E",
	"pZG+C4JzG+FjjU5anXfU3e6uxGWC/SqhTYTipD5dNKSqTxcJ9iPAY5dxhRWo0yMdbqn1KPXC0r21VyJ9",
	"z68MDmhb1iCiXYHL3FSvchv7r4+QrXmhpnhsBAykr4becWuM5hD7/0DA4enwMSqHlCx+MCQes5APQUpc",
	"RaiMVVODpQnQdYjH8LixoM0l1W8vMhbtVDZHR9YBwsIRGTB3ZyViss04rFFw7N2QSgDj7e1P6BpvJ3VN",
	"PA0/bvP9MMqWVL2NGmUxghsvl7czzLZN3qDB7e1pMWFg4ED7Jc5ROIDy8y48W8HF3tLm633E2SVJgPx2",
	"5LUR2xHfJRdgv53zeYD+dvpHW9TwexBNJR6saS+N9vnZYQ7ioQp2gcKjFNrf2tn+AM45Lsune9ch1MZd",
	"Id7Ar+2OGMZdu5LaEEZh/Gv9h7akmaprQOx4F11i6P49+ibSf0xAip0/RMHiDnYYAopj8KW0L4n+g4fU",
	"We4BluCS381LaVuTLGA7K2rIsQZsjbxhHwYBXkklUSGDkxYfZVOOG/j9tJ0Lbc7O1onII6o9t+tWMBfW",
	"zzgK+RZbUTBesk/kxO0r43qKn8lSKcTdwqWlq8jZJFz4NvNSz4x2yt0y3pRhUuloJ6dk6xh2PKLAxxMJ",
	"rwAdThRC8CpgBCv9ne1kdMkXqz1BNydUm96l1+aJ5gkHWNVPw2OYRxNzwaU4BHpEbU6kprS5wCyJynse",
	"+YZZZGplugxsEmDvs5FpX73h2N4jdpsFGw5Okscjfu3k/KeoomnxvFfWIE5lE6ksZW4xgTZLErGgzcFI",
	"XH7G95DhbKgDB82hOM7t/+EcHuPnu+0IOZ95fMMAx7lM7LrTtTJrYY42ab5hhvN9eP46NxaPGUi1TWKO",
	"HHagcSZ7DiiiOpona4ffzAf6U7TCQa9o9+Hyif6RCNFz11ES19HcDZnwZsftK69QGvl4d21zaCsmgRLC",
	"iB4HPZ841Ook8xguhipgt2jntFlceM8aLpp64rwjyuncaQuqtIpENTKGH4rbDSSZwhhL6DKMgQw5pn9e",
	"D4DuDxyX6Tf7h9yzwICj9ngtPE108yCfNTvVJxFRLcIAQiET4IHuMrYADVQQqI6ENeDexAG2cVxgg+g3",
	"s1WcGVmV90gwnw7FQ2uxrzHXRmLLCpBBhkHBpmGAQbo7gf4EMkedf+OjPm8SMBHW5khjSeEh2iumqUOA",
	"Q4MdGCKEsbAVMztVMwVZu9usw2rPBbGroRe7Om0y4rjXZo4n601RvE0YJvKr151NLfbpBhqeZ0yG3fQT",
	"z79+lE4wu+A6gaAxRng8BPrYu2o5cbb8OykEcrtZAJ25f/twukHyuiz6PQrnfchR46JaZU2k/0aE8Fcj",
	"/yNUU9PFjOwP2AuFFC4tk0Diw6b7JGC462yz2EZt3rmcIrye6J0nvd5HgfxagBD22EkCUq3fkbiOEwuw",
	"P6Brow8ZdI6ABKRuq7pvOC8Wb5ja+ZLgfy2xr0/mJP+zuqkJuT9yQXD5pDj0I2ONHUXqC+/+s/ZZK9kn",
	"xzzB6twVeNx9ZnYWv1cSTIJrkkusHgkKDsClOgFUMXvPFEP32UxzB/JFTpGq6IzYRfZ51oIcuVz/WeUc",
	"utgXENRPBj5GU6SpG4r6lBxDJ3wf52UMAxxJEf6DBG7eYVruO27u8Xh2mEG0mJDyFXCwwMc4ILEHNMyp",
	"bLDPVp9qJU/wSw46aYeNwHGNLfRtt6HNhUGl8BHi18bi7J+JvIXjeBefsLc7OUagXbL4YOjCoC4LEvMW",
	"fnrDdm+B4E1M4uxL8+XBlpJLHNPgMOoC+4xZThx/EebnqHAwX9X7kLpjvsriXUoGwGDMIiuhab1hdnUA",
	"2RMoEn1ZEGcZ4C49347iUoX34pUxYq6Hl7hGl2u7zuSNKiGpdVMsXR07WHdOCYZtt/8RhZcXbUP11if+",
	"Jrpu0iXE+etWlpDKbkccaBv+BYlLPIL7wZGrN1wdSSOg8w+Rl2XEzs1AUlykU5UbjBFn7+Lp4ZeOglmr",
	"KDO9Yb/4s2Ri8THa76ztZ3McgcwONd6Whx3KHRMIcYDwlv1L8dnCdSZhs4ipzhOyuiQVtYmpblnSN+y/",
	"NwY+Ej+wIfUDdJegOdRXEtA0z8GES0tHKnK8YI0BDQXaZIIsSSpiTTJc4rxhyplA+oPq6gTC9Ls/vDjU",
	"lSTdclHcseZbUzDAiqchvWE6rjOByI7e+MTZaH65NxUwcfDkbDduSuKs9zdsAIvw1zqeUuBMsRtolaSI",
	"BG5N2IurvWHiqhMqdciIUgZYFsJj7p/4ohckX9BtiMV9xfXtiFDuj9TuGo7fLUz70SbkcIg2Unzi5Pjs",
	"TnWSXUcxXOJAmBPIa3r/zvdsfm76pbsU/n4/ifYEqk9IEQnabU8u+OHArPZmgUR27jcTrg/asYMitan+",
	"cKI0RYqBCAUpam33mb4Jz+XVTXPmWhHPIs43iz+Ci0vcGgW+gV+O0W/9hlkiLfeivtT9mzSvk7AI0a62",
	"/Qf/6Yrweo6/wtt6WCdS9qzSwz7dQRCm/h1rI7hu3lTK2PW7gAQMhvhuevBAoacaC7AilB4uCbs9CDtw",
	"zPGQgqobIn/O+5GndvvORjBFUWcn3dcw6GgcvG1Y0DkHPUs6MpBDDqV8N/be0jAIGA6RxMsMKdDPA/fi",
	"HtyltsX98+Igoo73UdiPq9AvxTTZ//SEvTgJve0QTmlTlES08QZYIsM19k1PPKNNaZOzV+pBabDYBxMo",
	"4DomUYHOdeTuWLxyyiUUpV+K+hQ/uwnI5A3p7WU8JDmhhUc5Kcq3G5EQKctAho+9euNlXU7WlxvdINCW",
	"7Me9tuuw5vi7sd+R7dtLc7b8P4PonK77qE726evdIaN098scnbjtwpxXr4+9NCF7eeIDZ7ch/BnT233b",
	"d4xzJcV1JAfMEB5LCNPTmlfGRFthYCB16y3erzKPPyk+v07ViuVKqP1O27APljUBRxy4KWI3SQdeO+xe",
	"VPnu2LsL7RVT/2BsQOwIPbHINc8pw7BYdeSFH39KwV9LhPCmeXBaivwj9KMH4yhqHf4rNrH4Zbxt6nCf",
	"RqK//YXB5H0nDyG3nZQmczpv+VTZd2N3aI83t3L+3vJEldATI8s2R0gX74iwPpNgZRgutmuy/IbRgehq",
	"+ZEzjLZyxrf8m2MH1qBzERsJSiIJ369/Uv3Po/p+1IBoNTI/AL/Hgv+54R8hEU6ZNGspeigdKkQner6L",
	"x5KO5lCjPYVg2MK5C/4NvBYCkNyClRKoG7+YlPBWit2xeEvwbAqRNBd65ZqQDSP3YBpwYMJBoouwLeJ6",
	"ox4n7f5Dyp7idPsfo/+NImwi+bsg0LZdv+tQPsRO9a5Tk0YEVeIERnE79euQfdzJPAvbyrt2NpkSG8bN",
	"W75DC2WtDj4XxRKwFeTYwF55zU96N+qIpZNXJfPEw4bE1Z198j3c0wXLBbHAuwtPlFevNInwBQAyID2A",
	"EKiaWCOhHBcGrq0D4rB3FMLDyabKiSi9v3pbimASCLzgSLWKA8v0Wh7oK4y2LsRj2EakROw2V4GSRc8l",
	"2PFgZMOILByA9nhOcmjseHTrIvQXiaRXcexwsr0ZZplw6pHoSZAQ1MJ7vF+9vZJaPnhwgF39xg4Bb7Gt",
	"J9zHQTSEZ6Qo7ABt89Fj+m/t7b3rZIcav9VHDr9JHDrxKbwk1V3iMHOLWFZlMLJJ/98ChCxMW3uLiXMC",
	"vJ8PQH6ZCwxtyW8oXutmlHPXexjpwqO234glhX4gsY+oh2JUKwTpLpHPzh3TJdAWv8HYorjf8GMpvuNT",
	"BuwmUh5nQ/juLKri3VJxCGoDEgLGkBczBw5SdA/hnisgweNZca9FyYE2gV6v3qNUuLQA1uj/eYDj953O",
	"k9eEawkGGc6zQhRAOAI2bei9E4s48HEWruMJJLRfn/x0fjaCDrfVrKAD7ZznRxSfqkRiSPjUEaadmwT6",
	"/fJUID5W2MHYrcQQhnn2oJM2ej+AbHZxkLE33AYo8fvksYH4NtK5Aw3LtIGN9NXQxWAOEOeZzYfBqP4f",
	"GKdsjRrinngElztU34CnLg7pr0DXzcXO1A2oIeB3skHnFzlcApDqbc7oeRdwHqd5b6UUH9jeq+B69DSw",
	"FxH+J6VkFhT0fwQK1HtAd4WHCUZzVv6fNZZ02ppfUoafjLLQKWW8CLhnJIP8DSOswSV7icNIQH14yv1M",
	"2IDjQJsO+f/+IycKxcQrSKy//ff/ft38KzG8+vZdjueSP0It/ud//0tkTT4+fMDx9pojBiL852aKft9S",
	"PdtAwUefzG3AvKJOngLpafk0eMqtQXe57dt5ZD6Ow/hnUPjk2NA2zb3p7iO3n8PyEZTeDPXTRN45dO83",
	"7f4h2hNwFhfRdRYYCVZhQ6BxbOSFjRwRHuJBDRiBfAz95OWZhkoxAZfdH/AjGcsrYBbOMG3IIfCWjvg9",
	"pue+fBC3CHUiPbmAMfnAYRwght3hrzkv2/EnASj4HsYN2nlIGuYoUgdi4w64eIbNBd6CHA//k1/vw62f",
	"uc369nNq2f5VKoISAamt3XDV9x1e53WyOFr83gBDRA/wyjg69PLaTgkHigHeP9zmCBhGoJi2mwg0VPxM",
	"DcOUyrnlRvZs0p9plA9wgpe0eLPaD6YjLSZmkNwYZgmhHosWIjidtbwBTmetfSigLkY89hSA/grnaZga",
	"Oz4cXbmXy3l85X6PR1YOousOpYpeEGFn940Rkp/A1h1eRsxjaUQizq7n505d4lX14e9JNBP/4fglrN4w",
	"wKuo/qVteDkJ7wDHj3rU1R4hh6fUAx+9ih7B3nAwA77uCObLRecAB4yPxIEdMPbKvWGNO/6ngv0Xfb7y",
	"uxCywFx89KB7H8mFdMD4uDPlvTXifX77adIcC6lTz+Dk+4Izd2XP48l9V69M9qhyDT2R/s3uXukSzrtx",
	"ZV98wD1rMPI+wn74lWoILOSUBXL0W78Qi1D3Qpv8wV6wm5geyjnsS1AGEeBddLcj8CPeaPEAiOTgve9m",
	"pgdQ2wCnJiISilSuCGrNWJAFzhgmLKH/iORQRYOXe++WNQ3xowUfzeeE3W3jBWvY0MJJsyshzwCxrjxA",
	"LKhJxKR/Vb0nWB1esY6VdRu7wAbYgeyW5Q0r0K+xyt59qaprU0po0FuqZGK/W4B5PUvi2AB5N5En2jfh",
	"duy9IfZLSwIHfuG29FcqjUuvhjfqYZtT990CB5WndmkQuR/Djm3STjiokZBVFGQ7E20ve7M89z8k1kpi",
	"BOUb5/C8BNNmW+2YUrXdzOfkJOMZKK0gsCXLtPmLPZ6FKMuyzKsPw5WkTkyTQMZXjinZcA6Bzn8BNjug",
	"U9k29TNcwAtQIMV9bHCg9+JqOMFzYa+3TXFj/2MxtEYYUfrQVIlr7/UrxlR72Ac/503EX29QrA/1MDJt",
	"uHcGHuD1oe9b5VI2l8lJuo8MLvZy4jEDaZoOj0+It2PK/7/J/xyMmuxflKvrB0CwkDo72oXfSHzX5wF/",
	"73TQbT36N9NeP17TPc+I4QjaNtSG+6+y/PtwrvGYMPmX4R5LRlgwcghneYinzJE3lSwwFk+U1dATJiVH",
	"YSs8iyvswzvyDIHY/GPRhOhRiZmw0Hlpp+MFVIjQTOwu1Gsq7GZtYihWtSGuqBYbRQkQgsaYWkdkwLX4",
	"jfiuK3JQvx/LKuAWj7aUnprtzqGqHEeTUXiCwpFklH0W+WAiUvBW6rTTBNmHbMjSn1TXRs6qTRt7twhs",
	"4tEypkJMOHuTLIZsSPw7SYWV9fcspgDJTTcXu3hxJS9vIvLHrq2fVH3Sg3H8Mk99iXwfIKvEvn7380ou",
	"6JNvcnir2E+85uB+Vu7yLqWq/7y9+FT1Hyuyx4wsGYi5fAhgR2K1okdA5Tg/LvFi20DX37Dfl5dJ5tUh",
	"tM0lguRKkopEQs4fhHXB7n3p117owXB1ByUciAErD2O62hvWoKWbKx5JRw71TolXJRmMxzYc843VwQra",
	"rA9+P7zByWYz9+cSf8MaIhZw1Al1XfQwxjTZ5A95CQHsUwWoM4i5mkEOVZ4xEbXo+RzahJNUvkpeyT5k",
	"IbBQ7GssfSVfpfmd4ISx1JerBdT1BItGf+EZ4wn1MLZhlXrcnBJsagF4LZ3cWATT22KXHY6PirtBu6Vq",
	"3b/oWfHsvK0C/kEVtzgvbR1CWIok8gU181i5zwp0+lDXH+iqmgK8xs3TCUaElCzvUwlBuy8C3MegTuoP",
	"xthfgIW+zJNfhGUyK9Bh7FIsPVI1baqIRfGCbA+Gq+ThqIQArnyYYFZniUEzSEyBGKYDo7ztmH4BwTfc",
	"fTmwF45rY7JTgzLQ1UEGjI/0tEPaooV6yaKqX0RGoOobssVjGTl5/JufLZ79Ix7LnjK3DypTH7YSLHwu",
	"tg//+fbjW5hteCvrAHqvTg2Bh8BDBZBlnq6IAw3/ZfcOrC8/CwV4IR7HvGFEQhkGoTpDXIEKEEZY7DnQ",
	"xS6RgIe8/Ya9tvyulqlZkxCk0CO5B8vNY7gLKGF+dA8bORhhNiHPPiKqF72V7oKl7GfS5hZJL2FYPmwz",
	"Cq38V7BwRk5/6DhBGs7vJidHAFREUhLFUpGkZvjf7LwfpBt4xS7ecBiMy5OjCD5XSEvbputAgR0Hb5ga",
	"7gTEG9AFKYTgIJm2FIA4eGME7QywYq9FF284YpF96F+JKnLegkSRhumKRwjDxNgGDJ2KK3vWD9P2QWIc",
	"h/8J4/4FpcE5QSIQQ0XHT3N+w17UznsFwtCbWEYjJTaGW1AUwENbYmdDD4dJMkce4r5H4qMWS4yMw8lB",
	"t5Dh+X/xAcq8qhWHrViED5hf5AHlkb33npsm7JxwR1niyf8bu926wLcIT+Mfq1sycuZDB8GmUzZd/FvY",
	"+XiMlc/cp62Cd0QsYwTDxRYWmu8WsuoWQSonR30J29IuzyvpMlQyauNtfqUY5f4nk4jZ39NdN6a2OqH2",
	"/2nV5nexwX5EYxB0jj92pCb1p0yAn+p3K9+HCRHkFhCXqc2Rq+srzr8fy1sK8AskfLoTfxN34sv3SHLm",
	"7Y9P/+KX+Rf77H8FOttAVica9GZkL2M/a5k/pfTXG82z/LGo7EadMsvdb323YdL4JUYosr9lPt3TeC1i",
	"S8XE9ZsgSmA2XjPCcPyxyA8x5x4wYWHTFWSMUS/cZs40XdUnE//NTM3lccO4H/7xQscibObfIaZ4QKA+",
	"w41/M416BlsHUElEVMs97EaFml5J0gZjiTGQIRGdcWaA2sR4lIEiO0CXMJwzgMylCr30WK+V9yaKw3Zv",
	"ABpD5U29p+kHgo9A17egu85n4RAdLmLlzfefIYJ/Zojgl8vm3vLJxw45flllqcKR/D0vPnx1wNDLLYTH",
	"fra1X48vKCnshK8mwlD7JvbzvhdI11miH0d1964ONsgAvLgLL7Tp9YmIb8SoDgkSyd8wfx/Lzj0ugYKz",
	"iWMyYHS2XqotWArhBhqPnBGi9AocBLHJkKYRVnU4W5twul+kSPjcPk8zv/Np5rxgYlBC/5Q44F4+O/M8",
	"w8NoFV5Pfd9BJnkiu/6DLV7hQwfxX+X/s45GXGV9+c7+i7QfwaNBuFcK2DN4710hkwTM3w9Rpb5HHm5Z",
	"j6dJRIXPJHbK0Zy1jZ7Jg5eLnx7cP8mD+/SifsKL8qNxPqAy79qD1zJ1XRSLO9lTOiyv/2YL9I/3l+JH",
	"P/XMyhkR4whz/kykeJc7LwobH3GzTjNK/45A8b/ZQp3ucV2WjSiqNrOVk/h7pSS+4bC4Al2QfsivSKWV",
	"6TJ1wGDKVqZrS+YCR/K+2c3sG27OHHDFaNBLsgx3ltThJTaHzN/GlPsmXJoArOl8dnQWNnzD3mVxiF5e",
	"FZrdrTgW4ozegv1Bzku13K/iPiIL0/yX5F9+BkD/zAAJx7U/hdMvC5aIOP1Mcx5l9J8KnGx39RlB+RdH",
	"ULbs+ZfvmyK4B6MpPCZymcicFk/ZEpqnTXHeU9zY6o5X8Bln+YyzfLqif39X9Jed7jd2kKmVE075XQ7c",
	"cZmf4Do/p/H+JIfhSMqYiJ82gY1P7flvjAHsL6kbegPs47WGtK+fQ3YlPXk9xCVAJNW1bYgdZpVZ9PoN",
	"e+HrhwAd1P82zpOmvTLlVClFMtyi6A5vePs6fe8xlyXy+Ov6uNt4f50XnW396XxGmP+hB07iXcP7ohIA",
	"LobTIv8gR9jwlANohA8vuq9/8ite77MjqZMZOspnn29nPs+1f6KNYgdaBvZ9ynmW+DXYmTyK8qrDPrgW",
	"YGIxI/TmcwUJ3Z5u3ugBSQVEBRyALsB8YVDf1HHWvAO1rvP3MvwFjaq71Gf2rKjNU1u9P5JLT9a+Nnjy",
	"KRO7RJrP2H5qli1nW1Y+Jf/TOz3DJu97BEYly5PYn/LRDkiD/GnbPjn8H5TXEJjEk2MeB4XshNCGWMgu",
	"Smk46okKIhreN8K0hqtPWf2U1V/qh/5GT5/+cpV0+PiMDz6+OudkHCim7edYZ+qozXx+6o423M2nR/F5",
	"Wv6LtdSX75t/HDlIB/7CYdm88KQaks5iaEZ7DrC714Gq4B38513wv+Au+O//oNh/0f+Tz4kvFxn5crP0",
	"KTSfR9Cf9/eOfxW2QuecXY/4ie7HStWf4DLKny7jpwb4W7mM3OYJQy082ymadhXcberIQA45bAU9e/ph",
	"1/DPfK6XSBWfyucV/D8N4qt9Np+dYCVCfHamDfDZ7Cf0v4hTP3X/vw4tzDZ1eOqzLNaWJ2/yE8oOVBe0",
	"DUSIfzJ6w6xgyga+REd4FmRfGdIcAf8J5FFMlNDYHlg0wyHzMr9+WuW3GBkukSM2sU8G/xegHHk5hUBV",
	"TRc75DhwCsMrj5ZZ8PKm/T5OgAsTfXI2e7e3pn5RBQPeR9Hr45Pl/+FphluMF3rOzU/IodzZ+EV3KSKm",
	"PNMPivIkn/9PXaSIO/zk9L+p97Klkr98j+7fkbuHFjTMOeN3Ma/PzRnc4fVL7ya2uL29NdGTXqm1t6Zp",
	"swVwpIXwHL25f95R/Bveq53pbvyykO22KJ6VPLQ184uO16dI3J9qb852qj4tzW9sab7Ypri4+u8tp0JP",
	"scWWKhDUP8gRY3mBY7gtuHzwDzjDfLp3f4XQxWPLBDYTClO6rGrP6VK4r0KvKFo1ghplPO/ZxSlH7aDd",
	"2edrVinpIo5kY36y4D/8LM2K3DEv3X8jRDwUAInAENLzZfpyw33nZkgTaH/AoZkXuv7MCPwXZwQyNfbl",
	"O/3PiS/nwEYoNERCcsGuBvwK3BsEdLhiVwihuo+XnsSZuHTJydgwtGn0qL2Zl4bIvirMn2fvfxtWjMDj",
	"+GVePJe8s87Y4io6JxystwXoT7A68r/c6vwGFoGgMXYtgTNOJAvYjg+WzmoRLqCumgb0KvoxxW9ixQQ2",
	"e94Mlxa0EcQq5IjRiOn7N6wjPJOCCsG6zlJmTdvDpZ4DHWketBGi/cGEgwzoRUBZ3SkbYILotN6wB3tt",
	"QcyGdEwJqA6aQ4nQw+Tew0HJNCz20NpX6xJftmTZJj3m7j8ttDl5tjg7Lcw0l2yoIRuqjg9M0q2e/syM",
	"T2h7S9lO8Y38Mk99iQB1HwRiaRYZuFX0bfrYBoduK4MkLhDhGW4sIx0BIlmQp894AxELqmjkfeGXGaMM",
	"hFRXBzYDb2FT4x14BV+p/nqLqaYG32KSs7Kg5BOEl4l+eijdXb3hgekyiHE+CM8VeKMbhpH2FvNSr8NM",
	"NQFzBtjUtCCu3kolE2OobuC3VkF8ncMaS5rL0LHoRCS4VCcAj6GQJzhYU49J1WYjLkrcDPcQ1hnHeEsB",
	"6sxnMF94NCZY7Jdu6/F0pps4hr7FcicqLcGXP/bWNf5krMOMRU+H+znr3MTiKGP9TG7xP5BFo/p0upgJ",
	"4lC1drMhLaAizeCKHewh1iwT8fuLwyWfsARsG6yo1bRcRUcq7WNTbHEObcpmtX5np8rCGw7KLEA7zrIT",
	"4RJQ5t5AsZm2JAAbIQc1VY0u8ZLdp7T563yZrY1i1Y4FPDdy4AY0SZoghwR4LRsq+dsXl4CkIaCbY+qb",
	"WDYkEDtsY97wGDph8CXu7wBNsyEh8SAzDpGNaIeZfFOfww+kzxHgXpDXR0SL+DU3IxWeDeCoE6osANbe",
	"MD13jxnsoOuES3Ow4VTTZnImBCAUq+A2xBoJVkj+CMqLaNG1bq8oqPtxUGk9su25QFmxfd2npE70sjwL",
	"ATUBZmG3RV2wbW7ynFaBAzXyHVXNhAT/4fAqQXFpATlejzkacYbjZatNyy8oxK+F6O694e2K/XHOCSOg",
	"Ih05XnQEONJINxd/1Y41PRJcgjHJP/3lu8aU3SlO7461PcEr2WgL9jU7WIQyMfzedh2UNxzxUDbRo7dY",
	"xH4OPWeE+eBXUnXk124PvASOJLVxj7inEvU0pC1HgzEl0AmrPBJU6ZAk6ifRKViAkIVpa/7A3Beiaol+",
	"42G7epUIgWXpyH8RuZhAm3IenxezhoptLqhoeA8et3w5yszSwnR1jU4FGZZNT2Yq0CO27A3zkKDrmAZ3",
	"CkzDoMvUEYYeSq53vHRMU0d4HJcm5gLOGc35oRKbzhu2If0SYioOgEiISqplEsguaBmNgB6IRvGpyomJ",
	"TYej2npRe8d26Qa84bStMadydSr4uy9HHcaUF0gR27+fcs+8Hv6pmf9/qb9BVS7CI3O/q4eoR0BFn3F/",
	"uOQVUEzXEeWbHXQdL+hvr8/X9Wd/aUCOfvzr9/y8mz9xRsNHUTMs4xFyXhAl5dT8yRjpX7QlXC6Qpn7x",
	"j28HLTCzi9XbUnDc5ubU/3avFHSiuL9+hqRn0LfO+NQ3Y6p8UyFvJXHvYtuG7hyZriSp6kgIEwcCTfK9",
	"bGYpgBRYgdCBPgIPj0hwmODo6iT8lcCReMNOxDT7FkmwVmqffDfDM8h4y9yLhR5pasnfmzN9sfAZxjfv",
	"Pqz97mKu/gq1/OPH/w8AAP//YN5sooJqAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
