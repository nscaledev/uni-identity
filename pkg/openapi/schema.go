// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"QCNKhwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
