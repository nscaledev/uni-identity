// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//yBSh9bZaAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
