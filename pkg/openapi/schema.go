// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
