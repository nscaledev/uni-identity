// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
