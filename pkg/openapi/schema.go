// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"EyXZnT4a9ZnC1oJvrX6yGVeNDpuPqd035+rKnD0mtaS2TGPVKCX6L82xivi8Zv2X17FWLi0fV2OjbnTS",
	"9UklWS/Xlv1e1ahP7pL9di3dKGp6fdXUG71Ost7WeFysJruIz8/ImQpKT5VEN+/SwekncpTZgXx/0TLz",
	"86nzMLy1rLQZJ5aRX76vxtNW8yYzVialeKPwAFPosZW5LTzllq3XPuzGprcFTaZJVct0F0ojXeo+V5+a",
	"NDuV37NZW03Eq/n2spudttQ6tmPxScnIV52XRmYE5ET8od18xuVMtphdvdZzj3Oj1mqOk/dPJdp4Tz0W",
	"VOP5rpUAGqwuiVnO5bKGQZ323EoN8/Yc8NLEoQ3J+O9yQ9rq/a3cvJOTr4lmV72rdusJM9FMNnF7ml42",
	"7+LTmpGzXu/NeL1XX9VQ3FbvrCaQF+1mp3rbar+2Nf053dKbGVjUXmrydNnp5O60abqo3JdqWnncqN9r",
	"ydbdGHSK3btuvHQHDHnjhnRy9rOcnqrTbq8Zr6LuqpRulLSH5mQ87yRva8Cov/cn1VS9d7fqd8bPjTs9",
	"9bJ6vX1J1ledRFxu3HVXfb1ZU4qltjpp9lsya5dadhMWBt1+olm2uq2yVu3LcbOHq+nOMu7UC343pLpq",
	"xvspIFeW/Wlz2F3lU6/dakWdVF+aieZTrTxedI30S6dDS+Cu2e72cnHtpZ9s3qVtvxui9dIWSOSWCopP",
	"lHIu/lpIz1RDnan42QZYk7mL0qjcZF+yqjxetlR7ULy5ypRH9DHVUqt2Vk+ZC/OmMwPT2MOLWae0U3xe",
	"GK+4MlWrxeyzBQaw2phnWpPefbLQyk306WuzMEpqN534DY0pMpnF4vGeY/T0zuymWSI3KeUOTO1cByZi",
	"ra42coog/3h/p+VGhdnj03s3c2s8PyZbtlnqjbrOTQ0iuSMj04aZuxh8iA0UemOUO7Jcfym3Z6On2rRf",
	"fp3O7ZcsVKvZJZg8xuI0FqvHl6N2s5yExU4KT+t31btSKk7fb3PjQp+QQb5jFHCFyM0SsLpO7Gb8MJpk",
	"2iutgTP5+dPEdsByPtMri9WkZNUqPaCMzE7+afUOBq2GrZdj4KaVi9ec5HjVvFHSeukp0c6WmymzaY5J",
	"p243X2muMnp18tWy2q3dpAyZppKvs2rrodhMy9C4ia2qdjqdetd08JJ9dxJjuqD9zq1ejD2tFvMUmTvG",
	"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",
	"//+EDv6hmk4BAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
