openapi: 3.0.3
info:
  title: Unikorn Identity API
  description: |-
    The Unikorn Identity API provides an OIDC compliant interface for use with all
    Unikorn services and proxies.  As it's intended use is for multi-tenant cloud
    deployments it acts as an aggregation layer for other 3rd party OIDC services,
    dispatching login requests to the required OIDC backend.
  version: 0.1.0
paths:
  /.well-known/openid-configuration:
    description: |-
      Implements OIDC discovery.
    get:
      description: |-
        Reads the OIDC discovery page identifying all the required endpoints, and
        supported algorithms.
      responses:
        '200':
          $ref: '#/components/responses/openidConfigurationResponse'
  /oauth2/v2/authorization:
    description: |-
      Implements OAuth2 authorisation grants.
    get:
      description: |-
        Provides authentication and authorisation as per the OAuth2 specification.
        This particular implementation requires a "code" type response, and PKCE.
        You may specify the "openid" scope in order to have an OpenID Connect
        identity token returned during code exchange.
      responses:
        '200':
          $ref: '#/components/responses/authorizationResponse'
        '302':
          description: A redirect back to the validated callback URL.
        '400':
          $ref: '#/components/responses/htmlErrorResponse'
        '500':
          $ref: '#/components/responses/htmlErrorResponse'
    post:
      description: |-
        Provides authentication and authorisation as per the OAuth2 specification.
        This particular implementation requires a "code" type response, and PKCE.
        You may specify the "openid" scope in order to have an OpenID Connect
        identity token returned during code exchange.
      requestBody:
        $ref: '#/components/requestBodies/authorizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/authorizationResponse'
        '302':
          description: A redirect back to the validated callback URL.
        '400':
          $ref: '#/components/responses/htmlErrorResponse'
        '500':
          $ref: '#/components/responses/htmlErrorResponse'
  /oauth2/v2/token:
    description: |-
      Implements OAuth2 code exchange.
    post:
      description: |-
        Provides authorisation code to access token exchange as per the OAuth2
        specification with the "authorization_code" grant. If requested during
        authentication, and OpenID Connect identity token will also be returned.  
        The "password" grant type is also supported for applications where using
        a web browser in the authentication flow would be impractical, for example
        with automated command line client based tooling, however this is not
        recommended as it exposes credentials to the API, and not only with a trusted
        3rd party identity provider.
      requestBody:
        $ref: '#/components/requestBodies/tokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/tokenResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /oauth2/v2/login:
    description: |-
      After the user hits the authorisation endpoint, a dialog is presented to
      get the user's email address, control is returned back to the identity
      service via this address in order to perform email domain matching and
      delegate autorization to the correct identity provider.
    post:
      description: |-
        Sends the users's provided email address to the identity service.
      requestBody:
        $ref: '#/components/requestBodies/loginRequest'
      responses:
        '302':
          description: A redirect to the specified identity provider URI.
  /oauth2/v2/userinfo:
    description: |-
      Returns introspection information about an access token.
    get:
      description: Returns introspection information about an access token.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/userinfoResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
    post:
      x-no-body: true
      description: Returns introspection information about an access token.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/userinfoResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
  /oidc/callback:
    description: |-
      Implements the OIDC response code callback.
    get:
      description: |-
        The Kubernetes Service OAuth2 implementation does not provide any direct
        authentication or authorisation.  It instead delegates to a 3rd party
        identity provider.  This endpoint allows a 3rd party authorisation code
        to be returned to the Kubernetes Service and exchanged for an identity token.
      responses:
        '302':
          description: A redirect back to the browser with an authorisation code.
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /oauth2/v2/jwks:
    description: JSON web key set endpoint.
    get:
      description: |-
        Returns an array of public keys used to verify JWT tokens issued by
        this server, for example identity or authorisation tokens.
      responses:
        '200':
          $ref: '#/components/responses/jwksResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/signup:
    description: |-
      As part of an email welcome based user onboarding experience this is the
      link a user calls in order to validate their one-time token and transition
      from a pending to active state.
    get:
      description: |-
        Complete the user signup process.
      responses:
        302:
          description: A redirect to the UI.
        400:
          $ref: '#/components/responses/signupErrorResponse'
  /api/v1/oauth2providers:
    description: |-
      Allows management of system scoped oauth2 providers.  The identity service
      is typically registered with an identity provider who provides us a client
      identitifier and possibly a secret that we need to authenticate the user.
    get:
      description: |-
        Lists system identity providers.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/systemOauth2ProvidersResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/acl:
    description: |-
      Gets an ACL associated with the user.
      This is used to perform basic RBAC on remote services and to control
      UX.
    get:
      description: |-
        Returns access control properties for the user.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/aclResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations:
    description: |-
      Allows management of organizations.  Organizations are identified by an
      email domain.  The email domain is used to route login requests to a
      back-end provider e.g. Google or Microsoft.  The provider may allow
      configuration that in turn allows configuration of fine-grained access
      control based on group information from the identiy provider.  At present
      a user can be the owner of one organization, and must be a member of
      that domain.
    get:
      description: |-
        Returns a list of organizations that are owned/managed by the user.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/organizationsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Allows creation of a new organization. This is only available when authenticateUnknownUsers is true.
      security:
      - oauth2Authentication: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationWrite'
      responses:
        '202':
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizationRead'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}:
    description: |-
      Allows management of organizations.  Organizations are identified by an
      email domain.  The email domain is used to route login requests to a
      back-end provider e.g. Google or Microsoft.  The provider may allow
      configuration that in turn allows configuration of fine-grained access
      control based on group information from the identiy provider.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Get an organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/organizationResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Allows an organization to be updated.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/updateOrganizationRequest'
      responses:
        '200':
          description: Organization successfully updated and returned.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/acl:
    description: |-
      Gets an ACL associated with the user, scoped to the organization.
      This is used to perform basic RBAC on remote services and to control
      UX.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Returns access control properties for the user.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/aclResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/serviceaccounts:
    description: |-
      Allows creation and management of service accounts.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Lists all service accounts.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/serviceAccountsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Creates a new service account and returns an access token,
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/serviceAccountCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/serviceAccountCreateResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/serviceaccounts/{serviceAccountID}:
    description: |-
      Allows creation and management of service accounts.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/serviceAccountIDParameter'
    put:
      description: |-
        Updates a service account.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/serviceAccountCreateRequest'
      responses:
        '200':
          $ref: '#/components/responses/serviceAccountResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Removes a service account and revokes an access token.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          description: Service account removed and access token revoked.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/serviceaccounts/{serviceAccountID}/rotate:
    description: |-
      Allows creation and management of service accounts.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/serviceAccountIDParameter'
    post:
      x-no-body: true
      description: |-
        Rotates a service account's access token.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/serviceAccountCreateResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/users:
    description: |-
      Allows management of federated users.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Lists all users.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/usersResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Creates a new user and associates with a set of groups.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/userCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/userResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/users/{userID}:
    description: |-
      Allows management of federated users.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/userIDParameter'
    put:
      description: |-
        Updates a user.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/userCreateRequest'
      responses:
        '200':
          $ref: '#/components/responses/userResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes a user and disassociates them with all groups they are a member of.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          description: User removed and all groups disssociated with the user.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/roles:
    description: |-
      Allows management of roles that define access control permissions for
      users that are linked to them via a group.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Returns roles that can be used by the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/rolesResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/oauth2providers:
    description: |-
      Allows management of organization scoped oauth2 provider.  The identity service
      is typically registered with an identity provider who provides us a client
      identitifier and possibly a secret that we need to authenticate the user.
      Organizational identity providers allow you to bring your own OIDC service e.g.
      Okta. The V1 API only supports a single provider that will handle the entire
      domain registered at the organization scope.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Lists an organization's identity providers.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/oauth2ProvidersResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Create an organization's identity provider.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/oauth2ProviderRequest'
      responses:
        '201':
          $ref: '#/components/responses/oauth2ProviderResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/oauth2providers/{providerID}:
    description: |-
      Allows management of organization scoped oauth2 provider.  The identity service
      is typically registered with an identity provider who provides us a client
      identitifier and possibly a secret that we need to authenticate the user.
      Organizational identity providers allow you to bring your own OIDC service e.g.
      Okta. The V1 API only supports a single provider that will handle the entire
      domain registered at the organization scope.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/oauth2ProvderIDParameter'
    put:
      description: |-
        Update an organization's identity provider.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/oauth2ProviderRequest'
      responses:
        '200':
          description: Organizational identity provider updated.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Delete an organization's identity provider.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          description: Identity provider successfully deleted.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/groups:
    description: |-
      Allows management of organization groups. Groups provide an identity
      mapping from a group defined by the identity provider to ones that will
      be added to authorization tokens issued by this service.  A resource
      server may use group information to implment scoping of resources.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Returns a list of groups that are defined for the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/groupsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Allows creation of a new group.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createGroupRequest'
      responses:
        '201':
          $ref: '#/components/responses/groupResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/groups/{groupid}:
    description: |-
      Allows management of organization groups. Groups provide an identity
      mapping from a group defined by the identity provider to ones that will
      be added to authorization tokens issued by this service.  A resource
      server may use group information to implment scoping of resources.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/groupidParameter'
    get:
      description: |-
        Allows a single group to be polled.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/groupResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Allows a group to be updated.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/updateGroupRequest'
      responses:
        '200':
          description: Group successfully updated and returned.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Allows the deletion of an existing group.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          description: Group successfully deleted.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects:
    description: |-
      Implements project management services. Projects, as currently defined
      by the Kubernetes service, are implicitly scoped to the access token's
      organization.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        List all projects for the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/projectsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    post:
      description: |-
        Creates a new project resource for the user's organization.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/createProjectRequest'
      responses:
        '202':
          $ref: '#/components/responses/projectResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}:
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    get:
      description: |-
        Gets a project.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/projectResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Updates a project.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/updateProjectRequest'
      responses:
        '200':
          description: Project successfully updated.
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Deletes the project associated with the authenticated user's scoped
        authorisation token. This is a cascading operation and will delete all
        contained cluster managers and clusters.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/quotas:
    description: |-
      Provides management of resource limits.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Gets quotas for the organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/quotasResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Sets quotas for the organization.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/quotasRequest'
      responses:
        '200':
          $ref: '#/components/responses/quotasResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/allocations:
    description: |-
      Management of allocations.  Allocations form slices of quotas and in total never
      exceed the quotas in the scope the quota is defined for.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        Lists all allocation.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/allocationsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/allocations:
    description: |-
      Management of allocations.  Allocations form slices of quotas and in total never
      exceed the quotas in the scope the quota is defined for.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    post:
      description: |-
        Creates an allocation.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/allocationRequest'
      responses:
        '201':
          $ref: '#/components/responses/allocationResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '409':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/conflictResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/allocations/{allocationID}:
    description: |-
      Management of allocations.  Allocations form slices of quotas and in total never
      exceed the quotas in the scope the quota is defined for.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/allocationIDParameter'
    get:
      description: |-
        Gets an allocation.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/allocationResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    put:
      description: |-
        Updates an allocation.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/allocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/allocationResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: |-
        Updates an allocation.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          description: Allocation successfully deleted.
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
components:
  parameters:
    organizationIDParameter:
      name: organizationID
      in: path
      description: An organization ID.
      required: true
      schema:
        type: string
    serviceAccountIDParameter:
      name: serviceAccountID
      in: path
      description: A service account ID.
      required: true
      schema:
        type: string
    userIDParameter:
      name: userID
      in: path
      description: A user ID.
      required: true
      schema:
        type: string
    projectIDParameter:
      name: projectID
      in: path
      description: A project ID.
      required: true
      schema:
        type: string
    groupidParameter:
      name: groupid
      in: path
      description: A unique group ID.
      required: true
      schema:
        type: string
    oauth2ProvderIDParameter:
      name: providerID
      in: path
      description: An oauth2 provider ID.
      required: true
      schema:
        type: string
    allocationIDParameter:
      name: allocationID
      in: path
      description: A resource allocation ID.
      required: true
      schema:
        type: string
  schemas:
    openidConfiguration:
      description: OpenID configuration.
      type: object
      required:
      - issuer
      - authorization_endpoint
      - token_endpoint
      - userinfo_endpoint
      - jwks_uri
      - scopes_supported
      - claims_supported
      - response_types_supported
      - token_endpoint_auth_methods_supported
      - grant_types_supported
      - id_token_signing_alg_values_supported
      - code_challenge_methods_supported
      properties:
        issuer:
          description: The OpenID Issuer (iss field).
          type: string
        authorization_endpoint:
          description: The oauth2 endpoint that initiates authentication.
          type: string
          format: uri
        token_endpoint:
          description: The oauth2 endpoint that is used to exchange an authentication code for tokens.
          type: string
          format: uri
        userinfo_endpoint:
          description: The oidc endpoint used to get information about an access token's user.
          type: string
          format: uri
        jwks_uri:
          description: The oauth2 endpoint that exposes public signing keys for token validation.
          type: string
          format: uri
        scopes_supported:
          description: A list of supported oauth2 scopes.
          type: array
          items:
            $ref: '#/components/schemas/scope'
        claims_supported:
          description: A list of supported claims 
          type: array
          items:
            $ref: '#/components/schemas/claim'
        response_types_supported:
          description: A list of supported response types that can be requested for the authorization endpoint.
          type: array
          items:
            $ref: '#/components/schemas/responseType'
        token_endpoint_auth_methods_supported:
          description: A list of supported authentication methods for the token endpoint.
          type: array
          items:
            $ref: '#/components/schemas/authMethod'
        grant_types_supported:
          description: A list of supported grants for the token endpoint.
          type: array
          items:
            $ref: '#/components/schemas/grantType'
        id_token_signing_alg_values_supported:
          description: A list of signing algorithms supported for ID tokens.
          type: array
          items:
            $ref: '#/components/schemas/signingAlgorithm'
        code_challenge_methods_supported:
          description: A list of code challenge methods supported.
          type: array
          items:
            $ref: '#/components/schemas/codeChallengeMethod'
    scope:
      description: Supported scopes.
      type: string
      enum:
      - openid
      - email
      - profile
    claim:
      description: Supported claims.
      type: string
      enum:
      - aud
      - email
      - email_verified
      - exp
      - family_name
      - given_name
      - iat
      - iss
      - locale
      - name
      - picture
      - sub
    responseType:
      description: Supported response types.
      type: string
      enum:
      - code
      - token
      - id_token
      - code token
      - code id_token
      - token id_token
      - code token id_token
      - none
    authMethod:
      description: Supported authentication methods.
      type: string
      enum:
      - client_secret_post
      - client_secret_basic
      - tls_client_auth
    grantType:
      description: Supported grant type.
      type: string
      enum:
      - authorization_code
      - client_credentials
      - refresh_token
    signingAlgorithm:
      description: Supported signing algorithms.
      type: string
      enum:
      - ES512
    codeChallengeMethod:
      description: Supported code challenge methods.
      type: string
      enum:
      - S256
      - plain
    loginRequestOptions:
      description: Login request options.
      type: object
      required:
      - state
      properties:
        email:
          description: The user's email address.
          type: string
          nullable: true
        provider:
          description: The explcit provider type.
          type: string
          nullable: true
        state:
          description: The state string supplied by the authorization endpoint.
          type: string
    authenticationRequestOptions:
      description: aith2/OIDC authorization endpoint request.
      type: object
      required:
      - response_type
      - client_id
      - redirect_uri
      properties:
        response_type:
          $ref: '#/components/schemas/responseType'
        client_id:
          description: The client identifier.
          type: string
        redirect_uri:
          description: The registered callback address.
          type: string
        scope:
          description: Authorization scope.
          type: string
        state:
          description: Client state information.
          type: string
        nonce:
          description: OIDC nonce.
          type: string
        max_age:
          description: Max age of the login.
          type: string
        display:
          description: How to display the login prompt.
          type: string
        prompt:
          description: OIDC prompt.
          type: string
        ui_locales:
          description: Language options.
          type: string
        id_token_hint:
          description: A previously issued ID token.
          type: string
        login_hint:
          description: A login hint e.g. user name.
          type: string
        acr_values:
          description: Requested content class reference values.
          type: string
    tokenRequestOptions:
      description: oauth2 token endpoint.
      type: object
      required:
      - grant_type
      properties:
        grant_type:
          description: Supported grant type.  Must be either "code" or "password".
          type: string
        code:
          description: Authorization code. Required with the "code" grant type.
          type: string
          nullable: true
        client_id:
          description: Client ID. Required with the "code" grant type.
          type: string
          nullable: true
        redirect_uri:
          description: Client redirect URI. Required with the "code" grant type.
          type: string
          nullable: true
        code_verifier:
          description: Client code verifier. Required with the "code" grant type.
          type: string
          nullable: true
        username:
          description: Resource owner username. Required with the "password" grant type.
          type: string
          nullable: true
        password:
          description: Resource owner password. Required with the "password" grant type.
          type: string
          nullable: true
        refresh_token:
          description: A refresh token for the refresh_token grant type.
          type: string
          nullable: true
# This broke with an update to kin-openapi. The correct fix for that was to
# add a type so the property types match, which seems reasonable.  That however
# then broke oapi-codegen so we're leaving this here as a reminder - to those
# who haven't read the spec - until the latter can get its shit together.
#      oneOf:
#      - required:
#        - code
#        - client_id
#        - redirect_uri
#        - code_verifier
#        properties:
#          grant_type:
#            type: string
#            enum:
#            - authorization_code
#      - required:
#        - refresh_token
#        properties:
#          grant_type:
#            type: string
#            enum:
#            - refresh_token
    token:
      description: Oauth2 token result.
      type: object
      required:
      - token_type
      - access_token
      - expires_in
      properties:
        token_type:
          description: How the access token is to be presented to the resource server.
          type: string
        access_token:
          description: The opaque access token.
          type: string
        refresh_token:
          description: The opaque refresh token.
          type: string
        id_token:
          description: An OIDC ID token.
          type: string
        expires_in:
          description: The time in seconds the token will last for.
          type: integer
    userinfo:
      description: Access token introspection data.
      type: object
      required:
      - sub
      properties:
        sub:
          description: The access token's subject.
          type: string
        email:
          description: The user's email address.
          type: string
        email_verified:
          description: Whether the email address has been verified.
          type: boolean
        name:
          description: The user's full name.
          type: string
        given_name:
          description: The user's forename.
          type: string
        family_name:
          description: The user's surname.
          type: string
        middle_name:
          description: The user's middle name(s).
          type: string
        nickname:
          description: The user's nickname.
          type: string
        preferred_username:
          description: How the user chooses to be addressed.
          type: string
        profile:
          description: URL to the user's profile page.
          type: string
        picture:
          description: URL to the user's picture.
          type: string
        website:
          description: URL to the user's website.
          type: string
        gender:
          description: The user's gender.
          type: string
        birthdate:
          description: The users' birth date formatted according to ISO8601.  The year portion may be 0000 if they choose not to reveal they are really old.
          type: string
          format: date-time
        zoneinfo:
          description: The user's IANA assigned timezone.
          type: string
        locale:
          description: The user's RFC5646 language tag.
          type: string
        updated_at:
          description: Then the user's profile was last updated.
          type: string
    jsonWebKeySet:
      description: |-
        JSON web key set. This data type is defined by an external 3rd party standards
        committee. Consult the relevant documentation for further details.
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/jsonWebKey'
    jsonWebKey:
      description: JSON web key. See the relevant JWKS documentation for further details.
      type: object
      items:
        description: JSON web key.
        type: object
    oauth2ProviderType:
      description: The type of identity provider.
      type: string
      enum:
      - google
      - microsoft
      - github
    oauth2ProviderSpec:
      description: An oauth2 provider.
      type: object
      required:
      - issuer
      - clientID
      properties:
        type:
          $ref: '#/components/schemas/oauth2ProviderType'
        issuer:
          description: The OIDC issuer, typically where to perform auto discovery relative to.
          type: string
        clientID:
          description: |
            The client identification, only shown for super admin or organization owned providers
            that you are an admin for.
          type: string
        clientSecret:
          description: |
            The client secret, only shown for super admin or organization owned providers
            that you are an admin for.
          type: string
    systemOauth2ProviderRead:
      description: An OAuth2 provider when read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
        spec:
          $ref: '#/components/schemas/oauth2ProviderSpec'
    oauth2ProviderRead:
      description: An OAuth2 provider when read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/oauth2ProviderSpec'
    oauth2ProviderWrite:
      description: An OAuth2 provider when created or updated.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/oauth2ProviderSpec'
    systemOauth2Providers:
      description: A list of system provided oauth2 providers.
      type: array
      items:
        $ref: '#/components/schemas/systemOauth2ProviderRead'
    oauth2Providers:
      description: A list of oauth2 providers.
      type: array
      items:
        $ref: '#/components/schemas/oauth2ProviderRead'
    organizationType:
      description: |-
        Describes the authntication menthod of the organization.  Adhoc authentication
        means that users are exclusively added via explicit group membership  And must
        use a 'sign-in via' option.  Domain authentication means that users may login
        via their email address, must in the case of custom identity providers, that
        maps from domain to an identity provider.  This enables authentication options
        such as implicit group mappings for RBAC.
      type: string
      enum:
      - adhoc
      - domain
    providerScope:
      description: |-
        Describes how to lookup the provider, when global, use a built in generic provider
        e.g. Google/Microsoft, when organization, us an organization scoped provider.
      type: string
      enum:
      - global
      - organization
    organizationSpec:
      description: An organization.
      type: object
      required:
      - organizationType
      properties:
        organizationType:
          $ref: '#/components/schemas/organizationType'
        domain:
          description: The email domain of the organization.
          type: string
          format: hostname
        providerScope:
          $ref: '#/components/schemas/providerScope'
        providerID:
          description: |-
            The ID of the provider to use, the scope is determined by useCustomProvider.
            If false, this refers to a built in provider, if true, then to an organization
            specific one.
          type: string
        googleCustomerID:
          description: |-
            When set this identifies the customer ID for the google managed organization.
            This enables the access to, and use of, Google groups as a source of truth
            for RBAC.
          type: string
    organizationRead:
      description: An organization when read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
        spec:
          $ref: '#/components/schemas/organizationSpec'
    organizationWrite:
      description: An organization when created or updated.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/organizationSpec'
    organizations:
      description: A list of organizations.
      type: array
      items:
        $ref: '#/components/schemas/organizationRead'
    aclOperation:
      description: An access control operation.
      type: string
      enum:
      - create
      - read
      - update
      - delete
    aclOperations:
      description: A list of access control operations.
      type: array
      items:
        $ref: '#/components/schemas/aclOperation'
    aclEndpoint:
      description: A set of access control permissions for a resource type.
      type: object
      required:
      - name
      - operations
      properties:
        name:
          description: The resource name
          type: string
        operations:
          $ref: '#/components/schemas/aclOperations'
    aclEndpoints:
      description: A list of access control scopes.
      type: array
      items:
        $ref: '#/components/schemas/aclEndpoint'
    aclScopedEndpoints:
      description: Resource scoped endpoint permissions.
      type: object
      required:
      - id
      - endpoints
      properties:
        id:
          description: The resource ID this scope applies to.
          type: string
        endpoints:
          $ref: '#/components/schemas/aclEndpoints'
    aclScopedEndpointsList:
      description: A list of resource scoped endpoint permissions.
      type: array
      items:
        $ref: '#/components/schemas/aclScopedEndpoints'
    acl:
      description: A list of access control scopes and permissions.
      type: object
      properties:
        global:
          $ref: '#/components/schemas/aclEndpoints'
        organization:
          $ref: '#/components/schemas/aclScopedEndpoints'
        projects:
          $ref: '#/components/schemas/aclScopedEndpointsList'
    stringList:
      description: A list of strings.
      type: array
      items:
        description: An arbitrary string.
        type: string
    roleRead:
      description: A role.
      type: object
      required:
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
    roles:
      description: A list of roles.
      type: array
      items:
        $ref: '#/components/schemas/roleRead'
    groupSpec:
      description: A group.
      type: object
      required:
      - userIDs
      - serviceAccountIDs
      - roleIDs
      properties:
        userIDs:
          $ref: '#/components/schemas/stringList'
        serviceAccountIDs:
          $ref: '#/components/schemas/stringList'
        roleIDs:
          $ref: '#/components/schemas/stringList'
    groupRead:
      description: A group when read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/groupSpec'
    groupWrite:
      description: A group when created or updated.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/groupSpec'
    groups:
      description: A list of groups.
      type: array
      items:
        $ref: '#/components/schemas/groupRead'
    groupIDs:
      description: A list of group IDs.
      type: array
      items:
        description: A group ID.
        type: string
    projectSpec:
      description: A project.
      type: object
      required:
      - groupIDs
      properties:
        groupIDs:
          $ref: '#/components/schemas/groupIDs'
    projectRead:
      description: A project when read.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/projectSpec'
    projectWrite:
      description: A project when created or updated.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/projectSpec'
    projects:
      description: A list of projects.
      type: array
      items:
        $ref: '#/components/schemas/projectRead'
    serviceAccountSpec:
      description: A service account specification.
      type: object
      required:
      - groupIDs
      properties:
        groupIDs:
          $ref: '#/components/schemas/groupIDs'
    serviceAccountStatus:
      description: A service account status.
      type: object
      required:
      - expiry
      properties:
        expiry:
          description: When the service token is due to expire.
          type: string
          format: date-time
        accessToken:
          description: A long lived acccess token that can be exchanged for an API access token.
          type: string
    serviceAccountCreate:
      description: A new service account.
      type: object
      required:
      - metadata
      - spec
      - status
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/serviceAccountSpec'
        status:
          $ref: '#/components/schemas/serviceAccountStatus'
    serviceAccountRead:
      description: A service account.
      type: object
      required:
      - metadata
      - spec
      - status
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/serviceAccountSpec'
        status:
          $ref: '#/components/schemas/serviceAccountStatus'
    serviceAccounts:
      description: A list of service accounts.
      type: array
      items:
        $ref: '#/components/schemas/serviceAccountRead'
    serviceAccountWrite:
      description: A service account creation request.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/serviceAccountSpec'
    userState:
      description: The state a user is in.
      type: string
      enum:
      - active
      - pending
      - suspended
    userSpec:
      description: A user specification.
      type: object
      required:
      - subject
      - state
      - groupIDs
      properties:
        subject:
          description: The uers's canonical name, usually an email address.
          type: string
        state:
          $ref: '#/components/schemas/userState'
        groupIDs:
          $ref: '#/components/schemas/groupIDs'
    userStatus:
      description: Additional user metadata.
      type: object
      properties:
        lastActive:
          description: |-
            The last time a user performed some action.  This is not guaranteed to
            be completely accurate depending on performance constraints.
          type: string
          format: date-time
    userRead:
      description: A user read object.
      type: object
      required:
      - metadata
      - spec
      - status
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/organizationScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/userSpec'
        status:
          $ref: '#/components/schemas/userStatus'
    userWrite:
      description: A user create/update object.
      type: object
      required:
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/userSpec'
    users:
      description: A list of users.
      type: array
      items:
        $ref: '#/components/schemas/userRead'
    quotaMetadata:
      description: A single quota's metadata.
      type: object
      required:
      - name
    quotaMetadataRead:
      description: A list of quota metadata.
      type: array
      items:
        $ref: '#/components/schemas/quotaMetadata'
    quotaRead:
      description: A single quota.
      type: object
      required:
      - kind
      - quantity
      - used
      - free
      - committed
      - reserved
      - displayName
      - description
      - default
      properties:
        kind:
          description: The kind of resource.
          type: string
        quantity:
          description: Tha maximum amount of that resource.
          type: integer
        used:
          description: The amount of that resource that is used.
          type: integer
        free:
          description: The amount of that resource that is free.
          type: integer
        committed:
          description: Tha amount of that resource always in use.
          type: integer
        reserved:
          description: The amount of that resource that may be used e.g. autoscaled.
          type: integer
        displayName:
          description: The name that should be displayed to end users.
          type: string
        description:
          description: A verbose explanation of what the quota limits.
          type: string
        default:
          description: The default value of the quota.
          type: integer
    quotaWrite:
      description: A single quota.
      type: object
      required:
      - kind
      - quantity
      properties:
        kind:
          description: The kind of resource.
          type: string
        quantity:
          description: Tha maximum amount of that resource.
          type: integer
    quotaReadList:
      description: A list of quotas.
      type: array
      items:
        $ref: '#/components/schemas/quotaRead'
    quotaWriteList:
      description: A list of quotas.
      type: array
      items:
        $ref: '#/components/schemas/quotaWrite'
    quotasRead:
      description: A list of quotas.
      type: object
      required:
      - quotas
      properties:
        quotas:
          $ref: '#/components/schemas/quotaReadList'
    quotasWrite:
      description: A list of quotas.
      type: object
      required:
      - quotas
      properties:
        quotas:
          $ref: '#/components/schemas/quotaWriteList'
    resourceAllocation:
      description: A single quota but taking into account dynamic allocation.
      type: object
      required:
      - kind
      - committed
      - reserved 
      properties:
        kind:
          description: The kind of resource.
          type: string
        committed:
          description: Tha amount of that resource always in use.
          type: integer
        reserved:
          description: The amount of that resource that may be used e.g. autoscaled.
          type: integer
    resourceAllocationList:
      description: A list of quotas.
      type: array
      items:
        $ref: '#/components/schemas/resourceAllocation'
    allocationSpec:
      description: A set of resource allocations.
      type: object
      required:
      - kind
      - id
      - allocations
      properties:
        kind:
          description: The resource kind that owns this allocation.
          type: string
        id:
          description: The resource ID that owns this allocation.
          type: string
        allocations:
          $ref: '#/components/schemas/resourceAllocationList'
    allocationRead:
      description: An allocation of resources.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/allocationSpec'
    allocations:
      description: A list of allocations.
      type: array
      items:
        $ref: '#/components/schemas/allocationRead'
    allocationWrite:
      description: An allocation of resources.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/allocationSpec'
  requestBodies:
    authorizationRequest:
      description: OIDC authentication request.
      required: true
      content:
        pplication/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/authenticationRequestOptions'
          example:
            response_type: code
            client_id: c5b4c8b8-fa7b-49d4-a9ec-aaaef6f55105
            redirect_uri: https://client.org.com/callback
            nonce: bRSQrMrRRA
            scope: openid
    loginRequest:
      description: Information necessary to resolve a federated SSO provider.
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/loginRequestOptions'
          example:
            state: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
            email: joe.bloggs@acme.com
    tokenRequest:
      description: OAuth2 token request, consult the relevant OAuth2 and OIDC specifications for further details.
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/tokenRequestOptions'
          example:
            grant_type: authorization_code
            client_id: e58d490e-62f8-49a3-b7d0-b9beb615dabb
            redirect_uri: https://example.com/oauth2/callback
            code: eyJhbGciOiJFQ0RILUVTIiwiY3R5IjoiSldUIiwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAtNTIxIiwieCI6IkFic05hU1ByY3Y5RVJsWmFrOHVDc2V0T2F2aTJ4bS1taXFPWjVvQmFNR2ptc05Cbi04aE84QU9DbGR2OVM3dDlydTBEbDhabzFEcThxOEM5WUp0WGJfa0YiLCJ5IjoiQWU3VS1DcktsY3RJOXYzM0RsTWFsS0ZBZk9YcC1QeV9zZ0Y5Tjdaa05NQkRDRkVKb0FrRy1FTnhTczI2ME5memg4SnJnSnBRbUFFWHhvZ0poWHp2YWZMQSJ9LCJraWQiOiIxZHh3c29KUlZEQmxTYmxvSm93dDlJTkJwdGJTb21XUlBZck5LeWNFQV9RIiwidHlwIjoiSldUIn0..urRmbxH2_bn8LMla.Yw0a3qstHMAKnxawkIYntHcvOCjaxjzvV1JlmYM-2CTbC1i2VtAsNIKoOlFJ56H2N08pMY9OpZ2cukCHP1BQxsKMsc41VwlIZYvjFrzWIEeDoF92FmpCRGWztuwchBWd7PEQYpfeJFJ2BegacGheQqfRXX35RNDy-ZOc4dWkuvFrV8ISuA8-7_ce7Ha25SrRuSRarTfM_BLA1uDA_P9AWjhsyGKOK2FkuaDU0XmXlLWDz6dKdKy9RJtR_nUUcsljtaImJXjNNPAmJq10nJ501EK_I6M9B3TRUrqalOBm4ks7-vmF_gcE1saOv2AciE9P2BMkc635kaD3C5HlyWT95Skd6C_FwppjQUvYUY0y7Eq2NpnVfkX4uSPm8fUD4brSjGWnHMNE8z4M2_PlM4KSZAieLRmMAjY5xW8XY_uCXr5nb-8SmA_P-ljCVOPPAXDXExa2xSxbAJvrYqWeuG2IvAkC0ab6pojlqUmkRWvOX5tnXQav5vO2qOAgCYUhSIWXz0-Y8hczRUSgDTyQm59yU7xqVqCiywChgXlO32KwhhnrfLxNlrMB45XOlzhJP1c3DCg7ZW7bO_Q7A08GjvrXxTm7gUDr-jsdW9hTSiNJQu__zSMFPVVNTqnz1MDFIeusi6GJi9VC0A_ouXsdhcNKn6jeIDV9dnMxCcjbQT5qsCEqo-UcCGvH0_w4aChpldMg8HGPeUSZhaBSL1yns_I0C9AADFe9dmXN6wCHBu8JCy-T4FoeXRlVSKVuG2GJi8sfzAFFh6iKhQXxHm5KNA_iorBJVEOSX3dL6KOUXfdsBfTzg3aMoEyp2bJ9NaactGmFyJZM9e6MxS8UxgN6KHe7Gduc0NGFyBru3ClMq2BzchOxbzDQ_oi5YoSuxLpgGl3xiJfNnClqFTqXMJ75uSk0_OkKgvmHea9QGRaasx5XALSpap_ckCZvNYjG_oZh404-KTjpa2iJgENczeUT2F4jq59rCCAUFZVfyu3qtBAeJme4VghnbTvaITJbpFeBUySgYKcuGQ.uvQMjilUi8JcdyGe3Lbatg
            code_verifier: ZWQ0MGJjZGYyNThkZDYyM2QwNzQyOTY0NGM0ZWZjMzU5ZjRmMDkzZjVkNDJkNjVhNjAxZDYzZTVkYzY0MmNjZQo
    oauth2ProviderRequest:
      description: Body required to create an oauth2 provider.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2ProviderWrite'
    serviceAccountCreateRequest:
      description: Body required to create a service account.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceAccountWrite'
          example:
            metadata:
              name: my-service-account
              description: A service account for doing stuff.
            spec:
              groupIDs:
              - 0aaba80d-67ef-4799-b6d9-59f37e2ce2ad
    userCreateRequest:
      description: Body required to create a user.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userWrite'
          example:
            spec:
              subject: john.doe@acme.com
              state: active
              groupIDs:
              - 0aaba80d-67ef-4799-b6d9-59f37e2ce2ad
    createOrganizationRequest:
      description: Body required to create an organization.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizationWrite'
    updateOrganizationRequest:
      description: Body required to update an organization.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizationWrite'
    createGroupRequest:
      description: Body required to create a group.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupWrite'
    updateGroupRequest:
      description: Body required to update a group.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupWrite'
    createProjectRequest:
      description: Project request parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projectWrite'
          example:
            metadata:
              name: my-project
            spec:
              groupIDs:
              - ddde69ef-bb52-4815-9e9e-aed856c6057f
    updateProjectRequest:
      description: Project request parameters.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projectWrite'
          example:
            metadata:
              name: my-project
            spec:
              groupIDs:
              - ddde69ef-bb52-4815-9e9e-aed856c6057f
    quotasRequest:
      description: Allows the setting of quotas.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/quotasWrite'
          example:
            quotas:
            - kind: clusters
              quantity: 2
            - kind: servers
              quantity: 10
    allocationRequest:
      description: Creates a resource allocation.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/allocationWrite'
          example:
            metadata:
              name: undefined
            spec:
              kind: kubernetescluster
              id: a4e7fddc-4812-4bfa-94b4-2b1174ac7e0e
              allocations:
              - kind: clusters
                committed: 1
                reserved: 0
              - kind: servers
                committed: 3
                reserved: 10
  responses:
    htmlErrorResponse:
      description: |-
        A generic HTML error page.
      content:
        text/html: {}
    openidConfigurationResponse:
      description: |-
        OpenID configuration used for auto-discovery of endpoints and supported
        algorithms and features.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/openidConfiguration'
    authorizationResponse:
      description: |-
        A login form to request federation data from the user.
      content:
        text/html: {}
    tokenResponse:
      description: |-
        Authentication was successful and returns an authorisation token. The response
        may optionally include an OIDC identity token if that scope was requested.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/token'
          example:
            token_type: Bearer
            access_token: eyJhbGciOiJFQ0RILUVTIiwiY3R5IjoiSldUIiwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAtNTIxIiwieCI6IkFic05hU1ByY3Y5RVJsWmFrOHVDc2V0T2F2aTJ4bS1taXFPWjVvQmFNR2ptc05Cbi04aE84QU9DbGR2OVM3dDlydTBEbDhabzFEcThxOEM5WUp0WGJfa0YiLCJ5IjoiQWU3VS1DcktsY3RJOXYzM0RsTWFsS0ZBZk9YcC1QeV9zZ0Y5Tjdaa05NQkRDRkVKb0FrRy1FTnhTczI2ME5memg4SnJnSnBRbUFFWHhvZ0poWHp2YWZMQSJ9LCJraWQiOiIxZHh3c29KUlZEQmxTYmxvSm93dDlJTkJwdGJTb21XUlBZck5LeWNFQV9RIiwidHlwIjoiSldUIn0..urRmbxH2_bn8LMla.Yw0a3qstHMAKnxawkIYntHcvOCjaxjzvV1JlmYM-2CTbC1i2VtAsNIKoOlFJ56H2N08pMY9OpZ2cukCHP1BQxsKMsc41VwlIZYvjFrzWIEeDoF92FmpCRGWztuwchBWd7PEQYpfeJFJ2BegacGheQqfRXX35RNDy-ZOc4dWkuvFrV8ISuA8-7_ce7Ha25SrRuSRarTfM_BLA1uDA_P9AWjhsyGKOK2FkuaDU0XmXlLWDz6dKdKy9RJtR_nUUcsljtaImJXjNNPAmJq10nJ501EK_I6M9B3TRUrqalOBm4ks7-vmF_gcE1saOv2AciE9P2BMkc635kaD3C5HlyWT95Skd6C_FwppjQUvYUY0y7Eq2NpnVfkX4uSPm8fUD4brSjGWnHMNE8z4M2_PlM4KSZAieLRmMAjY5xW8XY_uCXr5nb-8SmA_P-ljCVOPPAXDXExa2xSxbAJvrYqWeuG2IvAkC0ab6pojlqUmkRWvOX5tnXQav5vO2qOAgCYUhSIWXz0-Y8hczRUSgDTyQm59yU7xqVqCiywChgXlO32KwhhnrfLxNlrMB45XOlzhJP1c3DCg7ZW7bO_Q7A08GjvrXxTm7gUDr-jsdW9hTSiNJQu__zSMFPVVNTqnz1MDFIeusi6GJi9VC0A_ouXsdhcNKn6jeIDV9dnMxCcjbQT5qsCEqo-UcCGvH0_w4aChpldMg8HGPeUSZhaBSL1yns_I0C9AADFe9dmXN6wCHBu8JCy-T4FoeXRlVSKVuG2GJi8sfzAFFh6iKhQXxHm5KNA_iorBJVEOSX3dL6KOUXfdsBfTzg3aMoEyp2bJ9NaactGmFyJZM9e6MxS8UxgN6KHe7Gduc0NGFyBru3ClMq2BzchOxbzDQ_oi5YoSuxLpgGl3xiJfNnClqFTqXMJ75uSk0_OkKgvmHea9QGRaasx5XALSpap_ckCZvNYjG_oZh404-KTjpa2iJgENczeUT2F4jq59rCCAUFZVfyu3qtBAeJme4VghnbTvaITJbpFeBUySgYKcuGQ.uvQMjilUi8JcdyGe3Lbatg
            refresh_token: eyJhbGciOiJFQ0RILUVTIiwiY3R5IjoiSldUIiwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAtNTIxIiwieCI6IkFTcHB0RE03Z2RVcEJVN2o2R3RnTk5yRE1kMm9pZHo1NWNzMi1rcEpRa0xTRUJBSTZTdlQ5SlR6eDdXM0kyUU9Edk5DbHFMdGhONHd3SEhaUDVEV1FEam0iLCJ5IjoiQU9rQ05kckVWR1JiVzF5OFdKRjhwU3BMamNqYjJ4NWEzYUhQOEl4XzZBX3NzU210OEVzYlRMbDFTcjRYS0EzYU4yV2pnaVY2RGpVSGdJY01oWnJ5Uy1uNCJ9LCJraWQiOiJzR1Y4a0IyYkRfVzA4ZVJIcjJXR2RPMGhxVm5XUUtFaERTVW91dXY3RE5rIiwidHlwIjoidW5pa29ybi1jbG91ZC5vcmcvcnQrand0In0..OI78X8c0hyScr_D7.6GgtL4ScJr8l4oxo7Uvak-KXoNttUDQxmZnIkcJD8Qpa_eJOw6SjWH3CS9jlkZRCg3d7U17t-b0sv-11WumWlUv7RFs74bEakr9Ue2-SVdguDaALHEd9gCvLPqV6BmQL3SroFWgVu7Mei0U0iore6E-eK-_bt7mGU00NXGTvgPMkYGZkwrX8ecJ8yajL-1t--N1ygTRG3eDU4nkNEJEF41tqB9hCYss_AUmCnIs0RFapVu-7hKgj6TzdOn6AwPjruaywvlIxzjFpMIWabgoUAPzqa_SOrlG-a7S91Mu3hzR7b5lFP2T8GR4oRohsUNrRZt9IgZuAJGcVM74m0t43ZvJSKDR50em7-zJr554qdlaX8qu2htxtYUBlD-Pzxw4swumw-335MJzasXPGCErTDf4ezSXBCbIs5IH4cbR_PztBqbkVTZ2YPuy7cORIKQiz8llMZCwirs2ad7HHvulLFgMl5SU6lv6zhi-QYTb0dTvc8DcKHhGljyDQtCYyxEF-GuU3VXiDH8nGHJlm2V5RjaRmTpQkjAn_2B9Ul8B8wwS1ROOCdTVpccdSa1F04izI5eYTO1I4sxtabw9r-E028y6dVOtmSPpcfaj88EB9_YdP3e8WrgdUz0_JPEodyWURmn5InoCG6oOYvuofViSXJ4XOtjME7vhgn4yQfOlebTnbVlV6zY6Vlb2BPn7VXVTCAvzItmfvlYF3cg4-uk11k-LTSSQ0mdll66gnwSHqjNQImknkwpVCTmmupeljG0bQWUt1J2s4ONvnLnPF8rlnnrOWBCvwnM33dO2hy9wt0edpK-IM3lGSPi3iX14ET4opFniZbLZbTipCwPZzvSeGhlMeXXTzg5quNQNupwtIdFgYmJacn301eRoR.OSpqA7IdukA7-HLtM4CRUQ
            id_token: eyJhbGciOiJFUzUxMiJ9.eyJhdF9oYXNoIjoidGJHNlFHek5WZE5fcjZ6Y0EzRlFyQzllNmVPbUpPN3lrSjFsTFBxNUJ0RSIsImF1ZCI6WyI5YTcxOWUxZS1hYTg1LTRhMjEtYTIyMS0zMjRlNzg3ZWZkNzgiXSwiZW1haWwiOiJqb2huLmRvZUBlbWFpbC5jb20iLCJleHAiOjE2OTE1NzM4NzEsImlhdCI6MTY5MTQ4NzQ3MSwiaXNzIjoiaHR0cHM6Ly9rdWJlcm5ldGVzLmVzY2hlcmNsb3VkLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLzhmNmU5NjI3NGMyYWJmNjE3YTM5ODdlNzRlOWU3NTdlIiwic3ViIjoiam9obi5kb2VAZW1haWwuY29tIn0.AYxSoAwkuKfBpp5o1spmAyqzhkSR76hbjF1OCKe4iLS6BCP9ySZYeV-kBCd0t3cd6VxbO5FVQJPRt8k0q88rc21JATyV8kScNnr-1jFmAJuXO6ga021KTRQnG68D8zZN9LwmMSRh3HPFtOq4LCcmQES2adeJysoG998mmtuTwp4fArwa
            expires_in: 3600
    userinfoResponse:
      description: |-
        Information about the user from the access token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userinfo'
          example:
            iss: https://identity.unikorn-cloud.org
            sub: joe.bloggs@acme.com
            aud: https://identity.unikorn-cloud.org
            exp: 1311281970
            iat: 1311280970
    jwksResponse:
      description: |-
        A JSON web key set. This is a set of named public keys that are referenced by JSON
        web tokens. The public key can be used to verify that a token was signed by this
        service.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/jsonWebKeySet'
          example:
            keys:
            - use: sig
              kty: EC
              kid: 1dxwsoJRVDBlSbloJowt9INBptbSomWRPYrNKycEA_Q
              crv: P-521
              x: AGWAbuKBnn0qXsj8iddWhZj5-ZTM4F4d5rJeKbblOGVc-5nJNURsPb7k-MhEqr9QAi5jKnd7lkmkHU2mnalwsQPK
              y: AAepClWS8MoLLCzqMQ2bl3KwzF7eSYLhcSrsk8kYuRaNN45mnVuQsH43QOILEB5XXaHhySSRgVCamMwZWUwArv1k
    signupErrorResponse:
      description: |-
        A dialog to explain a signup error.
      content:
        text/html: {}
    systemOauth2ProvidersResponse:
      description: |-
        A list of system provided oauth2 providers.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Providers'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: google-identity
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              issuer: https://accounts.google.com
              clientID: 111069338664-poc0c81dgsfudr0rbupj0unurjcvt12e.apps.googleusercontent.com
    oauth2ProviderResponse:
      description: |-
        An oauth2 provider.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2ProviderRead'
          example:
            metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: google-identity
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              issuer: https://accounts.google.com
              clientID: 111069338664-poc0c81dgsfudr0rbupj0unurjcvt12e.apps.googleusercontent.com
    oauth2ProvidersResponse:
      description: |-
        A list of oauth2 providers.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/oauth2Providers'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: google-identity
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              issuer: https://accounts.google.com
              clientID: 111069338664-poc0c81dgsfudr0rbupj0unurjcvt12e.apps.googleusercontent.com
    organizationResponse:
      description: |-
        An organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizationRead'
          example:
            metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: acme-corp
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              organizationType: domain
              domain: acme.corp
              providerID: b6ec241d-e3b4-4afc-a7aa-500fcb650d8e
    organizationsResponse:
      description: |-
        A list of organizations.  Most users should only see one, super admins can
        see all organizations on the platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizations'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: acme-corp
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              organizationType: domain
              domain: acme.corp
              providerID: b6ec241d-e3b4-4afc-a7aa-500fcb650d8e
    aclResponse:
      description: |-
        A list of access controls.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/acl'
          example:
            organization:
              id: adb2e414-1aef-4589-b933-ad0613d2d78f
              endpoints:
              - name: groups
                operations:
                - create
                - read
                - update
                - delete
            project:
            - id: a866ea05-2655-41bc-8135-d99b62ed4be6
              endpoints:
              - name: infrastructure
                operations:
                - create
    rolesResponse:
      description: |-
        A set of roles within the organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/roles'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: platform-admins
              description: Platform administrators.
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
    groupResponse:
      description: |-
        A group in the organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groupRead'
          example:
            metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: a-team
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              userIDs:
              - d4600d6e-e965-4b44-a808-84fb2fa36702
              serviceAccountIDs:
              - a0e9c93a-3a47-4ea1-9caf-22757428a810
              roleIDs:
              - d4600d6e-e965-4b44-a808-84fb2fa36702
    groupsResponse:
      description: |-
        A list of groups for the organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/groups'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: a-team
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              userIDs:
              - d4600d6e-e965-4b44-a808-84fb2fa36702
              serviceAccountIDs:
              - a0e9c93a-3a47-4ea1-9caf-22757428a810
              roleIDs:
              - d4600d6e-e965-4b44-a808-84fb2fa36702
    projectsResponse:
      description: A list of projects.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projects'
          example:
          - metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: my-project
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              groupIDs:
              - ef509cd1-c7e6-42f8-aae7-a01164dc60dc
    projectResponse:
      description: A project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projectRead'
          example:
            metadata:
              id: a142f641-7fd6-4ab9-a875-344c7ebadc53
              name: my-project
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              groupIDs:
              - ef509cd1-c7e6-42f8-aae7-a01164dc60dc
    serviceAccountResponse:
      description: A service accounts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceAccountRead'
          example:
            metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: my-service-account
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              groupIDs:
              - f2000047-19f8-426e-93b9-9f0a5bfa0edd
            status:
              expiry: 2025-03-14T16:10:00Z
    serviceAccountsResponse:
      description: A list of service accounts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceAccounts'
          example:
          - metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: my-service-account
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              groupIDs:
              - f2000047-19f8-426e-93b9-9f0a5bfa0edd
            status:
              expiry: 2025-03-14T16:10:00Z
    serviceAccountCreateResponse:
      description: A service account creation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/serviceAccountCreate'
          example:
            metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: my-service-account
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              groupIDs:
              - f2000047-19f8-426e-93b9-9f0a5bfa0edd
            status:
              expiry: 2025-03-14T16:10:00Z
              accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    usersResponse:
      description: A list of users.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users'
          example:
          - metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: undefined
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              subject: john.doe@acme.com
              state: active
              groupIDs:
              - 0aaba80d-67ef-4799-b6d9-59f37e2ce2ad
            status:
              lastAcive: 2025-01-12T10:49:13Z
    userResponse:
      description: A user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userRead'
          example:
            metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: undefined
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              subject: john.doe@acme.com
              state: active
              groupIDs:
              - 0aaba80d-67ef-4799-b6d9-59f37e2ce2ad
            status:
              lastAcive: 2025-01-12T10:49:13Z
    quotasResponse:
      description: Queries the quotas for an organizational unit.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/quotasRead'
          example:
            quotas:
            - kind: clusters
              quantity: 2
              used: 1
              free: 1
              committed: 1
              reserved: 0
              displayName: Clusters
              description: All cluster types e.g. Kubernetes, compute, etc.
              default: 5
    allocationsResponse:
      description: A list of allocations.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/allocations'
          example:
          - metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: undefined
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: a4e7fddc-4812-4bfa-94b4-2b1174ac7e0e
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              kind: kubernetescluster
              id: e0b6a5d2-ef9b-4f61-8d84-033b81ad3f73
              allocations:
              - kind: clusters
                committed: 1
                reserved: 0
              - kind: servers
                committed: 3
                reserved: 10
    allocationResponse:
      description: An allocation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/allocationRead'
          example:
            metadata:
              id: ee45f34b-9685-40d8-8724-23c31252ca46
              name: undefined
              organizationId: d4600d6e-e965-4b44-a808-84fb2fa36702
              projectId: a4e7fddc-4812-4bfa-94b4-2b1174ac7e0e
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              kind: kubernetescluster
              id: e0b6a5d2-ef9b-4f61-8d84-033b81ad3f73
              allocations:
              - kind: clusters
                committed: 1
                reserved: 0
              - kind: servers
                committed: 3
                reserved: 10
  securitySchemes:
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.unikorn-cloud.org/oauth2/v2/authorization
          tokenUrl: https://identity.unikorn-cloud.org/oauth2/v2/token
          scopes: {}
